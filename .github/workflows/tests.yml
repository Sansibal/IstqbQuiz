name: .NET Tests with Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test with coverage
      run: >
        dotnet test --no-build --configuration Release
        /p:CollectCoverage=true
        /p:CoverletOutput=TestResults/coverage.xml
        /p:CoverletOutputFormat=cobertura;opencover

    - name: Generate coverage report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:TestResults/coverage.xml -targetdir:CoverageReport -reporttypes:Html

    - name: Upload coverage report
      uses: actions/upload-pages-artifact@v3
      with:
        path: CoverageReport

  deploy-coverage:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
