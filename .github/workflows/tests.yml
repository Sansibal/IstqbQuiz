name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore IstqbQuiz.sln

    - name: Build solution
      run: dotnet build IstqbQuiz.sln --configuration Release --no-restore

    - name: Run tests with coverage
      run: dotnet test ISTQB_UnitTest/ISTQB_Tests.csproj --configuration Release --collect:"XPlat Code Coverage" --results-directory ISTQB_UnitTest/TestResults --no-restore

    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Generate coverage report
      run: reportgenerator -reports:ISTQB_UnitTest/TestResults/**/coverage.cobertura.xml -targetdir:CoverageReport -reporttypes:Html
      env:
        PATH: $PATH:/home/runner/.dotnet/tools

    - name: Upload coverage report
      uses: actions/upload-pages-artifact@v3
      with:
        path: CoverageReport

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
