[
  {
    "Id": 1,
    "Text": "Welche der folgenden Aussagen beschreibt ein erreichbares Testziel?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Es lässt sich nachweisen, dass das zu prüfende System keine Fehlerzustände mehr hat.",
      "Es lässt sich nachweisen, dass es nach der produktiven Inbetriebnahme des Systems keine Fehlerwirkungen geben wird.",
      "Die Risikostufe des Testobjekts ist verringert und Vertrauen in das Qualitätsniveau ist aufgebaut.",
      "Durch eine Überprüfung lässt sich feststellen, dass alle Kombinationen von Eingabewerten getestet wurden."
    ],
    "Explanation": "Durch das Testen werden Fehler aufgedeckt, was das Risiko verringert und gleichzeitig mehr Vertrauen in die Qualität des Testobjekts schafft (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.1.1, 4. + 8. Aufzählungspunkt).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 1,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 2,
    "Text": "Was ist der Hauptunterschied zwischen Testen und Debuggen?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Testen ist der Prozess der Fehlersuche, während Debugging der Prozess der Fehlerbehebung ist.",
      "Beim Testen werden Anforderungen überprüft, während beim Debugging der Entwurf überprüft wird.",
      "Testen ist der Prozess des Ausführens von Software, während das Debugging der Prozess der Analyse der Software ist.",
      "Testen ist der Prozess der Fehlervermeidung, während das Debugging der Prozess der Fehlerbeseitigung ist."
    ],
    "Explanation": "Unter Debugging versteht man das Auffinden, Analysieren und Beseitigen der Ursachen von Fehlern in einer Komponente oder einem System u. a. nach einem dynamischen Test zwecks Fehlersuche (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.1.2).",
    "CorrectIndexes": [
      0
    ],
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 3,
    "Text": "Sie sind Mitglied eines Teams, das ein neues System testet. Ihnen ist aufgefallen, dass seit mehreren Iterationen keine Änderungen an den bestehenden Regressionstestfällen vorgenommen und keine neuen Fehler durch einen Regressionstest aufgedeckt wurden. Ihr Vorgesetzter ist zufrieden, aber Sie sind es nicht.<br><br>Welcher Grundsatz des Testens erklärt Ihre Skepsis in dieser Situation AM BESTEN?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Alte Tests verlieren an Wirksamkeit.",
      "Trugschluss: “Keine Fehler” bedeuten ein brauchbares System.",
      "Häufung von Fehlerzuständen.",
      "Vollständiges Testen ist nicht möglich."
    ],
    "Explanation": "Dieser Grundsatz besagt, dass, wenn dieselben Tests immer und immer wieder wiederholt werden, diese Tests irgendwann keine neuen Fehler mehr finden. Das ist wahrscheinlich der Grund, warum die Tests auch in dieser Version alle bestanden wurden (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.3, Punkt 5).",
    "CorrectIndexes": [
      0
    ],
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 4,
    "Text": "Sie arbeiten in einem Team, das eine mobile Anwendung für Essensbestellungen entwickelt. In der aktuellen Iteration hat das Team beschlossen, die Zahlungsfunktionalität zu implementieren.<br><br>Welche der folgenden Aktivitäten gehören zur Testanalyse?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Die Aufwandsschätzung für den Test der Integration der mobilen Anwendung mit dem Zahlungsdienst durchführen.",
      "Die Entscheidung, ob getestet wird, inwieweit Zahlungen zwischen mehreren Nutzern aufgeteilt werden können.",
      "Mittels Grenzwertanalyse werden die Testdaten für die Testfälle abgeleitet, die die korrekte Zahlungsabwicklung für den zulässigen minimalen Betrag überprüfen.",
      "Die Abweichung zwischen dem tatsächlichen und dem erwarteten Ergebnis nach der Ausführung eines Testfalls analysieren."
    ],
    "Explanation": "Dies ist ein Beispiel für die Definition von Testbedingungen, die ein Teil der Testanalyse sind (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.4.1, Anteil Testanalyse).",
    "CorrectIndexes": [
      1
    ],
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 5,
    "Text": "Welche der folgenden Aussagen beschreibt AM BESTEN, wie ein Mehrwert durch Etablierung und Aufrechterhaltung der Verfolgbarkeit zwischen Testbasis und den Testmitteln erzielt wird?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Wartungstests können basierend auf Änderungen der ursprünglichen Anforderungen vollständig automatisiert werden.",
      "Es kann effizienter bestimmt werden, ob die angestrebte Überdeckung auch tatsächlich erreicht wurde.",
      "Die Testmanagementrolle kann feststellen, welche Tester die Fehler mit dem höchsten Schweregrad gefunden haben.",
      "Codebereiche, die möglicherweise durch Seiteneffekte einer Änderung beeinflusst werden, können durch Regressionstests gezielt überprüft werden."
    ],
    "Explanation": "Wenn die Testfälle mit den Anforderungen verknüpft sind, kann bei Hinzufügen eines neuen Testfalls (mit Verfolgbarkeit) festgestellt werden, ob zuvor nicht überdeckte Anforderungen bzw. Anforderungsteile durch den neuen Testfall überdeckt werden (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.4.4, 1. Aufzählungspunkt).",
    "CorrectIndexes": [
      1
    ],
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 6,
    "Text": "Welche der folgenden Aussagen vergleicht AM BESTEN die verschiedenen Rollen beim Testen?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Die Rolle des Testens führt Testfälle aus, die Testmanagementrolle plant und überwacht die Testaktivitäten und meldet die Abweichungen an alle Tester.",
      "Die Rolle des Testens führt die Aktivitäten der Testanalyse sowie des Testentwurfs aus und erstellt und führt Testfälle aus, die Testmanagementrolle koordiniert die Testressourcen und berichtet an die Stakeholder.",
      "Die Rolle des Testens entscheidet über die zu automatisierenden Tests und priorisiert Testfälle, die Testmanagementrolle analysiert Risiken und setzt Prioritäten für die Tests.",
      "Die Rolle des Testens führt statische und dynamische Komponententests durch, die Testmanagementrolle führt Systemtests und Abnahmetests durch."
    ],
    "Explanation": "Diese Option beschreibt sinngemäß die Hauptaufgaben der einzelnen Rollen beim Testen. Die Rolle des Testens entwirft, erstellt und führt Testfälle aus und sie führt die Aktivitäten der Testanalyse und des Testentwurfs aus und meldet Fehler; die Rolle des Testmanagements koordiniert die Testressourcen und erstattet den Beteiligten Bericht (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.4.5, 2. + 3. Absatz).",
    "CorrectIndexes": [
      1
    ],
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 7,
    "Text": "Welche der folgenden Aussagen erklärt AM BESTEN einen Vorteil der Unabhängigkeit des Testens?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Der Einsatz eines unabhängigen Testteams ermöglicht es der Projektleitung, dem Testteam die Verantwortung für die Qualität des Endprodukts zu übertragen.",
      "Wenn man sich ein externes Testteam leisten kann, dann hat das den Vorteil, dass dieses externe Team nicht so leicht von den Bedenken des Projektmanagements und der Notwendigkeit, strikte Liefertermine einzuhalten, beeinflusst werden kann.",
      "Ein unabhängiges Testteam kann getrennt von den Entwicklern arbeiten, muss nicht durch Änderungen der Projektanforderungen abgelenkt werden und kann die Kommunikation mit den Entwicklern auf die Fehlerberichterstattung über das Fehlermanagementsystem beschränken.",
      "Wenn Spezifikationen Mehrdeutigkeiten und Ungereimtheiten enthalten, treffen Entwickler Annahmen über ihre Interpretation, und ein unabhängiges Testteam kann nützlich sein, um diese Annahmen und die Interpretation der Entwickler zu hinterfragen."
    ],
    "Explanation": "Spezifikationen sind nie perfekt, was bedeutet, dass der Entwickler Annahmen treffen muss. Ein unabhängiges Testteam ist insofern nützlich, als es die Annahmen und die anschließende Interpretation der Entwickler hinterfragen und überprüfen kann (vgl. CTFL- Lehrplan V4.0, Abschnitt 1.5.3, 3. Absatz, letzter Satz).",
    "CorrectIndexes": [
      3
    ],
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 8,
    "Text": "Wie zeigt sich der Whole-Team-Ansatz in der Interaktion zwischen Testern und Fachbereichsvertretern?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Fachbereichsvertreter entscheiden gemeinsam mit der Projektleitung über die Ansätze zur Testautomatisierung.",
      "Tester helfen Fachbereichsvertretern bei der Festlegung der Teststrategie.",
      "Die Beteiligung von Fachbereichsvertretern ist nicht Teil des Whole-Team-Ansatzes.",
      "Tester helfen Fachbereichsvertretern bei der Erstellung geeigneter Abnahmetests."
    ],
    "Explanation": "Die Tester arbeiten eng mit Fachbereichsvertretern zusammen, um sicherzustellen, dass die gewünschten Qualitätsniveaus erreicht werden. Dazu gehört auch die Unterstützung und Zusammenarbeit mit ihnen, um ihnen bei der Erstellung geeigneter Abnahmetests zu helfen (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.5.2, 3. Absatz).",
    "CorrectIndexes": [
      3
    ],
    "KLevel": 1,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 9,
    "Text": "Welche der folgenden Aussagen beschreibt AM BESTEN eine gute Praktik für das Testen, die für alle Softwareentwicklungslebenszyklen gilt?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Testen sollte erst nach Abschluss der Entwicklung durchgeführt werden.",
      "Testen sollte unter Federführung der Entwicklung durchgeführt werden.",
      "Testen sollte frühzeitig im Entwicklungsprozess beginnen.",
      "Testen sollte in einer Entwicklungstestumgebung durchgeführt werden."
    ],
    "Explanation": "Testen sollte frühzeitig im Entwicklungsprozess beginnen, um Fehler so früh wie möglich zu erkennen und die Kosten für die Fehlerbehebung zu minimieren (vgl. auch: CTFL-Lehrplan V4.0, Abschnitt 2.1.2, 3. Aufzählungspunkt und Abschnitt 1.3).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 1,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 10,
    "Text": "Welche der folgenden Aussagen beschreibt AM BESTEN den Ansatz der abnahmetestgetriebenen Entwicklung (ATDD)?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "In der ATDD werden Akzeptanzkriterien typischerweise basierend auf dem Format GIVEN/WHEN/THEN erstellt.",
      "Bei ATDD werden zunächst die Testfälle entwickelt und dann die Software inkrementell gegen die Testfälle und definierten Akzeptanzkriterien implementiert.",
      "Bei ATDD werden Tests aus Akzeptanzkriterien als Teil des Systementwurfs abgeleitet.",
      "Bei ATDD basieren die Tests auf dem gewünschten Verhalten der Software, was es für die Teammitglieder einfacher macht, die Tests und die definierten Akzeptanzkriterien zu verstehen."
    ],
    "Explanation": "Bei der abnahmetestgetriebenen Entwicklung (ATDD) werden Tests anhand von Akzeptanzkriterien als Teil des Systementwurfs abgeleitet und erstellt (vgl. CTFL-Lehrplan V4.0, Abschnitt 2.1.3, 2. aufgelisteter Ansatz, 1. Aufzählungspunkt).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 1,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 11,
    "Text": "Welche der folgenden Aussagen ist KEIN Beispiel für den Shift-Left-Ansatz?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Benutzeranforderungen werden überprüft, bevor sie von den Stakeholdern formell akzeptiert werden.",
      "Komponententestfälle werden erstellt, bevor der zugehörige Code programmiert wird.",
      "Der Performanztest einer Komponente wird während des Komponententests ausgeführt.",
      "Nicht-funktionale Tests werden, wenn möglich, beginnend auf der Ebene der Systemtests ausgeführt."
    ],
    "Explanation": "Frühe nicht-funktionale Tests sind zwar ein Beispiel für den Shift-Left-Ansatz, aber NICHT erst auf der Ebene der Systemtests. Erfolgen sie so spät, ist dies KEIN Beispiel für den Shift-Left-Ansatz (vgl. CTFL-Lehrplan V4.0, Abschnitt 2.1.5, 5. Aufzählungspunkt).",
    "CorrectIndexes": [
      3
    ],
    "KLevel": 2,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 12,
    "Text": "Welches der folgenden Argumente ist AM BESTEN geeignet, um Ihren Vorgesetzten davon zu überzeugen, am Ende eines jeden Releasezyklus eine Retrospektive durchzuführen?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Retrospektiven sind heutzutage sehr beliebt und unsere Kunden würden es zu schätzen wissen, wenn wir sie in unsere Prozesse aufnehmen würden.",
      "Die regelmäßige Durchführung von Retrospektiven spart dem Unternehmen Geld, da die Vertreter der Endnutzer kein unmittelbares Feedback über das Produkt geben.",
      "Die bei der Retrospektive festgestellten Prozessschwächen können während der Retrospektive analysiert werden und als Aufgabenliste für das Programm zur kontinuierlichen Prozessverbesserung des Unternehmens dienen.",
      "Retrospektiven ermöglichen es dem Team, sich gegenseitig zu loben und zu motivieren, was die Arbeitsmoral und die Produktivität erhöhen."
    ],
    "Explanation": "Regelmäßig durchgeführte Retrospektiven mit entsprechenden Folgeaktivitäten sind entscheidend für die kontinuierliche Verbesserung von Entwicklung und Test (vgl. CTFL-Lehrplan V4.0, Abschnitt 2.1.6, 2. Absatz, 2. Satz).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 2,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 13,
    "Text": "Welche Arten von Fehlerzuständen (1-4) werden in welchen Teststufen (A-D) AM EHESTEN gefunden?<br><br>1. Fehlerzustände, wenn das Systemverhalten von den geschäftlichen Anforderungen abweicht<br>2. Fehlerzustände in der Kommunikation zwischen Komponenten<br>3. Fehlerzustände in einer isolierten Komponente<br>4. Fehlerzustände in einer nicht korrekt implementierten User-Story<br><br>A. Komponententest<br>B. Komponentenintegrationstest<br>C. Systemtest<br>D. Abnahmetests<br><br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "1D, 2B, 3A, 4C",
      "1D, 2B, 3C, 4A",
      "1B, 2A, 3D, 4C",
      "1C, 2A, 3B, 4D"
    ],
    "Explanation": "Die Testgrundlage für Abnahmetests sind die Geschäftsanforderungen des Benutzers (1D)<br><br>Die Kommunikation zwischen den Komponenten wird beim Komponentenintegrationstest der Komponenten getestet (2B)<br><br>Fehler in einer isolierten Komponente können beim Komponententest (3A) festgestellt werden, da dieser Test die interne Struktur und Funktionalität einer einzelnen Komponente überprüft",
    "CorrectIndexes": [
      0
    ],
    "KLevel": 2,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 14,
    "Text": "Die Teststrategie Ihres Unternehmens sieht vor, dass die Datenmigration zum Nachfolgesystem getestet werden muss, sobald ein System außer Betrieb genommen wird. <br><br>Mit welcher Testaktivität wird diese Anforderung am ehesten erfüllt?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Wartungstest",
      "Regressionstest",
      "Komponententest",
      "Komponentenintegrationstest"
    ],
    "Explanation": "Wenn ein System außer Betrieb genommen wird, kann es erforderlich sein, die Datenmigration zu testen, was eine Art von Wartungstest ist. Das ist eine Art von Test, der durchgeführt wird, wenn ein System außer Betrieb genommen oder geändert wird, um sicherzustellen, dass die Funktionalität und Leistung erhalten bleiben. Die Notwendigkeit einer Datenmigration fällt unter Migration. Der Wechsel zum Nachfolgesystem fällt unter Ablösung des Systems, beides sind Auslöser für Wartungstests (vgl. CTFL-Lehrplan V4.0, Abschnitt 2.3, 3. Absatz, 2. + 3. Aufzählungspunkt).",
    "CorrectIndexes": [
      0
    ],
    "KLevel": 2,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 15,
    "Text": "Welche der folgenden Optionen ist KEIN Vorteil des statischen Testens?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Die Bewertung und Behebung der durch eine statische Analyse aufgedeckten Anomalien kann erheblichen Zeit- und Ressourcenaufwand erfordern.",
      "Die Behebung von Fehlerzuständen, die bei statischen Tests gefunden werden, ist in der Regel wesentlich kostengünstiger als die Behebung von Fehlern, die bei dynamischen Tests gefunden werden.",
      "Das Finden von Programmierfehlern, die bei dynamischen Tests möglicherweise nicht gefunden werden.",
      "Das Aufdecken von Lücken und Unstimmigkeiten in den Anforderungen."
    ],
    "Explanation": "„Die (manuelle) Bewertung und Behebung der durch eine statische Analyse aufgedeckten Anomalien kann erheblichen Zeit- und Ressourcenaufwand erfordern.“ Das ist ein möglicher Nachteil des statischen Testens, insbesondere wenn das Testobjekt sehr komplex und umfangreich ist (vgl. CTFL-Lehrplan V4.0, Abschnitt 3.1.2, letzter Absatz).",
    "CorrectIndexes": [
      0
    ],
    "KLevel": 2,
    "Topic": "Kapitel 3 - Statischer Test"
  },
  {
    "Id": 16,
    "Text": "Welcher der folgenden Punkte ist ein Vorteil von frühem und häufigem Feedback durch Stakeholder?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Es verbessert den Testprozess für zukünftige Projekte.",
      "Es zwingt die Kunden dazu, ihre Anforderungen basierend auf den abgestimmten Risiken zu priorisieren.",
      "Nur so lässt sich die Qualität der Änderungen im Prozess messen.",
      "Es hilft, Missverständnisse bei den Anforderungen zu vermeiden."
    ],
    "Explanation": "Frühes und häufiges Feedback ermöglicht die frühzeitige Aufdeckung potenzieller Qualitätsprobleme wie missverstandener Anforderungen (vgl. CTFL- Lehrplan V4.0, Abschnitt 3.2.1, 1. Absatz).",
    "CorrectIndexes": [
      3
    ],
    "KLevel": 1,
    "Topic": "Kapitel 3 - Statischer Test"
  },
  {
    "Id": 17,
    "Text": "Die in Ihrem Unternehmen durchgeführten Reviews weisen die folgenden Eigenschaften auf:<br><br>• Der Hauptzweck ist die Kommunikation oder die Schulung der Gutachter.\n• Die Sitzung wird vom Autor des Arbeitsergebnisses geleitet.\n• Es gibt eine individuelle Vorbereitung der Reviewer (Gutachter).\n• Ein Reviewbericht kann erstellt werden.<br><br>Welche der folgenden Arten eines Reviews wird am ehesten verwendet?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Informelles Review",
      "Walkthrough",
      "Technisches Review",
      "Inspektion"
    ],
    "Explanation": "Der Hauptzweck ist die Kommunikation und die Schulung der Gutachter als wichtiges Ziel eines Walkthrough<br><br>Das Review-Meeting wird vom Autor des Arbeitsprodukts geleitet – dies ist bei Inspektionen nicht erlaubt und wird bei technischen Reviews nur in Ausnahmefällen durchgeführt. Ein Moderator wird bei Walkthroughs benötigt und ist bei informellen Reviews erlaubt<br><br>Einzelne Reviewer (Gutachter) finden mögliche Anomalien während der Vorbereitung – alle Arten von Reviews können eine individuelle Vorbereitung der Reviewer einbeziehen<br><br>Es wird ein Reviewbericht erstellt – alle Arten von Reviews können einen Reviewbericht erstellen, obwohl informelle Reviews keine Dokumentation erfordern",
    "CorrectIndexes": [
      1
    ],
    "KLevel": 2,
    "Topic": "Kapitel 3 - Statischer Test"
  },
  {
    "Id": 18,
    "Text": "Welche der folgenden Aussagen ist KEIN Faktor, der zu einem erfolgreichen Review beiträgt?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Die Teilnehmer sollten sich ausreichend Zeit für das Review nehmen.",
      "Eine Aufteilung großer Arbeitsprodukte in kleine Teile wird empfohlen, damit die Reviewer (Gutachter) nicht die Konzentration verlieren.",
      "Klare Ziele und messbare Endekriterien werden für das Review festgelegt.",
      "Das Management wirkt persönlich mit bei der Kommunikation der Befunde."
    ],
    "Explanation": "Das Management ist verantwortlich für das Budget und für die Unterstützung des Reviewprozesses, sollte aber nicht persönlich bei der Kommunikation der Befunde beteiligt werden (vgl. CTFL-Lehrplan V4.0, Abschnitt 3.2.5, 6. Aufzählungspunkt und Abschnitt 3.2.3, 1. Aufzählungspunkt).",
    "CorrectIndexes": [
      3
    ],
    "KLevel": 1,
    "Topic": "Kapitel 3 - Statischer Test"
  },
  {
    "Id": 19,
    "Text": "Welcher der folgenden Punkte ist ein Merkmal erfahrungsbasierter Testverfahren?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Testfälle werden auf der Grundlage detaillierter Entwurfsinformationen erstellt.",
      "Zur Messung des Überdeckungsgrads werden die Anzahl der im Test geprüften Schnittstellen verwendet.",
      "Die Verfahren beruhen in hohem Maße auf den Kenntnissen des Testers über die Software und die Geschäftsdomäne.",
      "Die Testfälle werden verwendet, um Abweichungen von den Anforderungen zu identifizieren."
    ],
    "Explanation": "Dies ist ein gemeinsames Merkmal der erfahrungsbasierten Testverfahren. Dieses Wissen und diese Erfahrung, einschließlich der erwarteten Nutzung der Software, ihrer Umgebung, der wahrscheinlichen Fehler und der Verteilung dieser Fehler, wird zur Definition von Tests verwendet (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.1).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 20,
    "Text": "Sie testen die Software für eine unbeaufsichtigte amerikanische Zapfsäule. Nachdem die Zapfpistole abgehoben und die gewünschte Kraftstoffsorte ausgewählt wurde, gibt der Kunde die gewünschte Kraftstoffmenge in Gallonen über ein Tastenfeld ein. Das Tastenfeld erlaubt nur die Eingabe von Ziffern. Pro Zapfvorgang kann zwischen 0,1 und 50,0 Gallonen getankt werden.<br><br>Welche der folgenden Antworten repräsentiert eine minimale Menge von Eingabewerten, die alle gültigen und ungültigen Äquivalenzklassen für die Kraftstoffmenge überdeckt?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "0,0; 20,0; 60,0",
      "0,0; 0,1; 50,0",
      "0,0; 0,1; 50,0; 70,0",
      "-0,1; 0,0; 0,1; 49,9; 50,0; 50,1"
    ],
    "Explanation": "Diese Liste von Eingabewerten definiert genau einen Testfall pro Äquivalenzklasse (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.2.1, 5. Absatz).",
    "CorrectIndexes": [
      0
    ],
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 21,
    "Text": "Sie testen ein E-Commerce-System, das Lebensmittel wie Gewürze, Mehl und andere Artikel in großen Mengen verkauft. Die Einheiten, in denen die Artikel verkauft werden, sind entweder Gramm oder Kilogramm. Unabhängig von den Einheiten ist die kleinste gültige Bestellmenge 0,5 Einheiten (z. B. ein halbes Gramm Kardamomkapseln) und die größte gültige Bestellmenge 25,0 Einheiten (z. B. 25 Kilogramm Zucker). Die Genauigkeit der Bestellmenge beträgt 0,1 Einheiten.<br><br>Welche der folgenden Eingabewerte decken nur die Grenzwerte mit der 2-Wert-Grenzwertanalyse für die Bestellmenge ab?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "0,3; 24,9; 25,2",
      "0,4; 0,5; 0,6; 24,9;25,0; 25,1",
      "0,4; 0,5; 25,0; 25,1",
      "0,5; 0,6; 24,9; 25,0"
    ],
    "Explanation": "Diese Menge an Eingabewerten deckt die vier Grenzwerte ab, die durch Anwendung der 2-Wert-Methode selektiert werden (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.2.2, 4. Absatz).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 22,
    "Text": "Neu eingestellte Mitarbeitende einer Firma können individuelle Ziele mit ihren Vorgesetzten vereinbaren, an deren Erreichung die Auszahlung einer Prämie gekoppelt ist. Diese Prämie wird ihnen aber erst ausgezahlt, wenn sie länger als ein Jahr im Unternehmen beschäftigt sind.<br><br>Dieser Sachverhalt lässt sich in einer Entscheidungstabelle darstellen:",
    "Diagram": "images/frage22_diagramm.png",
    "PostText": "Welcher der folgenden Testfälle beschreibt eine in der Praxis gültige, durchführbare Situation und fehlt in der oben aufgeführten Entscheidungstabelle?\n\nWählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Bedingung1 = „J“, Bedingung2 = „N“, Bedingung3 = „J“, Aktion = „N“",
      "Bedingung1 = „J“, Bedingung2 = „J“, Bedingung3 = „N“, Aktion = „J“",
      "Bedingung1 = „N“, Bedingung2 = „N“, Bedingung3 = „J“, Aktion = „N“",
      "Bedingung1 = „J“, Bedingung2 = „J“, Bedingung3 = „N“, Aktion = „N“"
    ],
    "Explanation": "Der Testfall beschreibt die fachlich korrekte Situation (Gegenstück zu Antwort b), dass das Nichterreichen des vereinbarten Ziels zur Nichtauszahlung der Prämie führt, wenn der Mitarbeiter länger als ein Jahr beschäftigt ist. Diese Situation kann in der Praxis vorkommen, fehlt aber in der Entscheidungstabelle (vgl. CTFL- Lehrplan V4.0, Abschnitt 4.2.3, 2. Absatz).",
    "CorrectIndexes": [
      3
    ],
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 23,
    "Text": "Welche der folgenden Aussagen zum Zustandsübergangsdiagramm und der dargestellten Tabelle von Testfällen ist WAHR?",
    "Diagram": "images/frage23_diagramm.png",
    "PostText": "Wählen Sie EINE Option! (1 aus 4)",
    "Table": [
      {
        "Testfall": "Startzustand",
        "1": "S1",
        "2": "S2",
        "3": "S2",
        "4": "S3",
        "5": "S3"
      },
      {
        "": "Eingabe",
        "1": "Power On",
        "2": "Power Off",
        "3": "RC On",
        "4": "RC Off",
        "5": "Power Off"
      },
      {
        "": "Endzustand",
        "1": "S2",
        "2": "S1",
        "3": "S3",
        "4": "S2",
        "5": "S1"
      }
    ],
    "Options": [
      "Die Testfälle führen alle Übergänge im Zustandsübergangsdiagramm aus, damit wird 100% Überdeckung aller Übergänge erreicht.",
      "Die Testfälle führen alle gültigen Übergänge im Zustandsübergangsdiagramm aus. Damit wird 100% 0-Switch-Überdeckung erreicht.",
      "Die Testfälle führen nur einige der gültigen Übergänge im Zustandsübergangsdiagramm aus. Damit liegt die 0-Switch-Überdeckung unter 100%.",
      "Testfall 2 ist für 100% 0-Switch-Überdeckung nicht erforderlich, da Zustand S1 bereits durch Testfall 5 überdeckt wurde."
    ],
    "Explanation": "Da alle 5 gültigen Übergänge ausgeführt werden.",
    "CorrectIndexes": [
      1
    ],
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 24,
    "Text": "Welche der folgenden Aussagen ist eine Beschreibung für eine Anweisungsüberdeckung?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Es handelt sich um eine Metrik zur Berechnung und Messung des prozentualen Anteils der ausgeführten Testfälle.",
      "Es handelt sich um eine Metrik, die den prozentualen Anteil, der bereits durch Testfälle ausgeführten Anweisungen im Code angibt.",
      "Es handelt sich um eine Metrik zur Messung der Anzahl der durch Testfälle ausgeführten Anweisungen im Code, die keine Fehlerwirkung aufgedeckt haben.",
      "Es handelt sich um eine Metrik, die eine Wahr/Falsch-Bestätigung gibt, ob alle Anweisungen durch ausgeführte Testfälle abgedeckt sind."
    ],
    "Explanation": "Der Anweisungstest hat zum Ziel, durch Testfälle die Anweisungen im Code auszuführen, bis eine akzeptable Anweisungsüberdeckung erreicht ist. Die Anweisungsüberdeckung wird als die Anzahl der von den durch Testfälle ausgeführten Anweisungen gemessen, geteilt durch die Gesamtzahl der ausführbaren Anweisungen im Testobjekt, ausgedrückt in Prozent (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.3.1, 1. Absatz).",
    "CorrectIndexes": [
      1
    ],
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 25,
    "Text": "Welche der folgenden Aussagen trifft NICHT auf White-Box-Tests zu?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "White-Box-Test ist ein Test, der auf der Analyse der internen Struktur einer Komponente oder eines Systems basiert.",
      "White-Box-Überdeckungsmetriken können helfen, zusätzliche Tests zu identifizieren, um die Codeüberdeckung zu erhöhen.",
      "White-Box-Testverfahren können ergänzend zu den Black-Box-Testverfahren eingesetzt werden, um das Vertrauen in den Code zu stärken.",
      "White-Box-Tests können helfen, nicht implementierte Anforderungen zu identifizieren."
    ],
    "Explanation": "Dies ist die Schwäche der White-Box-Testverfahren. Sie sind nicht in der Lage, die fehlende Implementierung zu identifizieren, da sie nur auf der Struktur des Testobjekts und nicht auf der Anforderungsspezifikation beruhen (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.3.3, 1. Absatz, letzter Satz).",
    "CorrectIndexes": [
      3
    ],
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 26,
    "Text": "Welche der folgenden Aussagen beschreibt AM BESTEN das Konzept der intuitiven Testfallermittlung?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Bei der intuitiven Testfallermittlung nutzen Sie Ihr Wissen über und Ihre Erfahrung mit in der Vergangenheit gefundenen Fehlerzuständen und -wirkungen und typischen Fehlhandlungen von Entwicklern.",
      "Bei der intuitiven Testfallermittlung werden Ihre persönlichen Erfahrungen mit der Entwicklung und den Fehlhandlungen, die Sie als Entwickler gemacht haben, genutzt.",
      "Bei der intuitiven Testfallermittlung müssen Sie sich vorstellen, dass Sie der Benutzer des Testobjekts sind und Fehlerwirkungen erraten, die der Benutzer bei der Interaktion mit dem Testobjekt machen könnte.",
      "Bei der intuitiven Testfallermittlung müssen Sie die Entwicklungsaufgabe schnell selbst durchführen, um die Fehlerzustände und -wirkungen zu erkennen, die ein Entwickler machen könnte."
    ],
    "Explanation": "Das Grundkonzept der intuitiven Testfallermittlung (engl. Error Guessing) besteht darin, dass der Tester versucht zu erraten, welche Fehlhandlungen ein Entwickler gemacht haben könnte, und welche Fehlerzustände im Testobjekt vorhanden sein könnten, basierend auf früheren Erfahrungen. Diese Methode beruht auf der Annahme, dass Fehler sich wiederholen oder ähnlich sind. Sie können Ihre Testfälle so gestalten, dass sie diese potenziellen Fehler aufdecken (vgl. CTFL-Lehrplan V4.0; Abschnitt 4.4.1, 1. Absatz).",
    "CorrectIndexes": [
      0
    ],
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 27,
    "Text": "In Ihrem Projekt hat sich die Freigabe einer brandneuen Anwendung verzögert und die Testdurchführung hat spät begonnen, aber Sie verfügen über sehr detailliertes Fachwissen und gute analytische Fähigkeiten. Die vollständige Anforderungsspezifikation wurde noch nicht an Sie weitergegeben und die Geschäftsleitung bittet um die Vorlage erster Testergebnisse.<br><br>Welches Testverfahren ist in dieser Situation AM BESTEN geeignet?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Checklistenbasiertes Testen",
      "Intuitive Testfallermittlung",
      "Exploratives Testen",
      "Anweisungstest"
    ],
    "Explanation": "Exploratives Testen ist vor allem dann sinnvoll, wenn nur wenige Spezifikationen bekannt sind und/oder der Zeitplan für die Tests eng gesteckt ist (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.4.2, 3. Absatz, 1. Satz).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 28,
    "Text": "Welche der folgenden Aktivitäten beschreibt AM BESTEN die Art und Weise, wie Akzeptanzkriterien für eine User-Story formuliert werden können?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Durchführung von Retrospektiven zur Ermittlung der tatsächlichen Bedürfnisse der Stakeholder in Bezug auf eine bestimmte User-Story.",
      "Verwendung des Formats GIVEN/WHEN/THEN zur Beschreibung einer beispielhaften Testbedingung im Zusammenhang mit einer bestimmten User-Story.",
      "Mündliche Kommunikation, um das Risiko zu verringern, dass die Akzeptanzkriterien von anderen missverstanden werden.",
      "Dokumentieren von Risiken im Zusammenhang mit einer bestimmten User-Story in einem Testkonzept, um das risikobasierte Testen dieser User-Story zu erleichtern."
    ],
    "Explanation": "Dies ist eine Standardmethode zur Dokumentation von Akzeptanzkriterien für eine User-Story (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.5.2, 3. Absatz, 1. Aufzählungspunkt).",
    "CorrectIndexes": [
      1
    ],
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 29,
    "Text": "Ihr Team verfolgt den Ansatz der abnahmetestgetriebenen Entwicklung (ATDD) und analysiert die folgende User-Story, um Testfälle zu erstellen.<br><br> Als registrierter Kunde möchte ich meine bisherigen Bestellungen auf der Website des Unternehmens einsehen können, um einen Überblick über meine Einkäufe zu behalten.<br><br>Ihr Team ermittelt die folgende Liste von Testfällen. Welcher der Testfälle ist für diese User-Story NICHT relevant?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Eingabe: Der Kunde loggt sich in sein Konto auf der Website ein und klickt auf die Schaltfläche \"Bestellhistorie anzeigen\". Erwartete Ausgabe: Das System zeigt eine Liste aller früheren Bestellungen des Kunden an, einschließlich Datum, Bestellnummer und Gesamtkosten.",
      "Eingabe: Der eingeloggte Kunde klickt in der Liste seiner Bestellungen auf eine Bestellung. Erwartete Ausgabe: Das System zeigt die einzelnen gekauften Artikel mit Preis und Menge an.",
      "Eingabe: Der eingeloggte Kunde klickt auf die Schaltfläche \"Aufsteigend sortieren\" auf dem Bildschirm mit der Bestellhistorie. Erwartete Ausgabe: Das System zeigt die Bestellhistorie aufsteigend sortiert nach Bestellnummer an.",
      "Eingabe: Ein neu registrierter Kunde loggt sich ein und gibt eine erste Bestellung ein. Erwartete Ausgabe: Das System akzeptiert die Bestellung und legt die zugehörigen Daten ab."
    ],
    "Explanation": "Der Testfall hat KEINE Relevanz für die User-Story, denn ein neu registrierter Kunde hat keine Bestellhistorie. Der Testfall kann zwar für ein Online-Bestellsystem grundsätzlich relevant sein, aber nicht für diese User-Story (vgl. CTFL- Lehrplan V4.0, Abschnitt 4.5.3).",
    "CorrectIndexes": [
      3
    ],
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 30,
    "Text": "Wie schaffen Tester einen Mehrwert für die Iterationsplanung?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Die Tester bestimmen die Priorität der zu entwickelnden User-Storys.",
      "Die Tester konzentrieren sich nur auf die Verfeinerung der funktionalen Aspekte des zu prüfenden Systems.",
      "Die Tester beteiligen sich an der Risikoanalyse und bestimmen die Testbarkeit von User-Storys.",
      "Die Tester ermöglichen die Freigabe qualitativ hochwertiger Software durch frühzeitigen Testentwurf während der Releaseplanung."
    ],
    "Explanation": "Laut dem Lehrplan ist dies eine der Möglichkeiten, wie Tester einen Mehrwert für die Iterationsplanung schaffen (vgl. CTFL-Lehrplan V4.0, Abschnitt 5.1.2, 3. Absatz, 2. Satz).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 1,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 31,
    "Text": "Welche der folgenden Optionen sind Endekriterien für den Test eines Systems?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Testumgebung ist einsatzbereit.",
      "Anmeldung am Testobjekt durch den Tester ist möglich.",
      "Erwartete Fehlerdichte ist erreicht und Fehlerzustände sind berichtet worden.",
      "Anforderungen sind in das Format GIVEN/WHEN/THEN übersetzt worden."
    ],
    "Explanation": "Die erwartete Fehlerdichte ist ein Maß für die Sorgfalt; daher gehört sie zu den Endekriterien. Das vollständige Berichten aller im Test aufgedeckten Fehler ist ebenfalls ein Abschlusskriterium und gehört daher ebenfalls zu den Endekriterien. Die Besonderheit hier besteht darin, dass zwei definierte Endekriterien miteinander verknüpft wurden (vgl. CTFL-Lehrplan V4.0; Abschnitt 5.1.3, 3. Absatz).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 32,
    "Text": "Ihr Team verwendet das Drei-Punkt-Schätzungsverfahren, um den Testaufwand für eine neue, risikoreiche Funktion zu schätzen. Es wurden die folgenden Schätzungen vorgenommen:<br><br>• optimistischste Schätzung: 2 Personenstunden\n• wahrscheinlichste Schätzung: 11 Personenstunden\n• pessimistischste Schätzung: 14 Personenstunden<br><br>Wie lautet die endgültige Schätzung?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "9 Personenstunden",
      "10 Personenstunden",
      "11 Personenstunden",
      "14 Personenstunden"
    ],
    "Explanation": "Begründung (vgl. ISTQB®-Lehrplan CTFL V4.0, Abschnitt 5.1.4):<br><br>Für die Drei-Punkt-Schätzung gilt:<br><br>E = (optimistischste + 4*wahrscheinlichste + pessimistischste) / 6<br><br>E = (2+(4*11)+14)/6 = 10 Personenstunden",
    "CorrectIndexes": [
      1
    ],
    "KLevel": 3,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 33,
    "Text": "Sie testen eine mobile Applikation, die es Benutzern ermöglicht, ein nahegelegenes Restaurant zu finden, das die gewünschte Art des Essens anbietet. Gegeben ist die folgende Liste von Testfällen, Prioritäten (eine kleinere Zahl bedeutet eine höhere Priorität) und Abhängigkeiten:",
    "Diagram": "images/frage33_diagramm.png",
    "Options": [
      "TF 003",
      "TF 005",
      "TF 002",
      "TF 001"
    ],
    "PostText": "Welcher der folgenden Testfälle soll als dritter ausgeführt werden?\n\nWählen Sie EINE Option! (1 aus 4)",
    "Explanation": "Der Test TF 001 muss zuerst durchgeführt werden, gefolgt von TF 002, um die Abhängigkeiten zu berücksichtigen. Danach folgt TF 003, um die maximale Priorität zu berücksichtigen, und dann TF 004, gefolgt von TF 005.",
    "CorrectIndexes": [
      0
    ],
    "KLevel": 3,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 34,
    "Text": "Betrachten Sie die folgenden Tests (1-4) und Testquadranten (A-D):<br><br>1. Gebrauchstauglichkeitstest\n2. Komponententest\n3. Funktionaler Test\n4. Zuverlässigkeitstest<br><br>A. Testquadrant Q1: Technologieorientierung, Unterstützung des Teams\nB. Testquadrant Q2: Geschäftlich orientiert, Unterstützung des Teams\nC. Testquadrant Q3: Geschäftlich orientiert, kritische Betrachtung des Produkts\nD. Testquadrant Q4: Technologieorientierung, kritische Betrachtung des Produkts<br><br>Wie lassen sich die obigen Testkategorien den Testquadranten zuordnen?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "1C, 2A, 3B, 4D",
      "1D, 2A, 3C, 4B",
      "1C, 2B, 3D, 4A",
      "1D, 2B, 3C, 4A"
    ],
    "Explanation": "Der Gebrauchstauglichkeitstest erfolgt in Q3 (1C), der Komponententest erfolgt in Q1 (2A), der funktionale Test in Q2 (3B) und der Zuverlässigkeitstest in Q4 (4D).",
    "CorrectIndexes": [
      0
    ],
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 35,
    "Text": "Im Rahmen einer Risikoanalyse wurde das folgende Risiko ermittelt und bewertet:<br><br>• Risiko: Zu lange Antwortzeit bei der Bereitstellung eines Suchergebnisses\n• Eintrittswahrscheinlichkeit: mittel; Schadensausmaß: hoch\n• Reaktion auf das Risiko:\n &nbsp &nbsp o Ein unabhängiges Testteam führt während der Systemtests einen Performanztest durch.\n &nbsp &nbsp o Eine ausgewählte Stichprobe von Endnutzern führt vor der Freigabe Alpha- und Beta-Tests durch.<br><br>Welche Art von Maßnahmen wurde oben vorgeschlagen, um auf das ermittelte Risiko zu reagieren?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Risikoakzeptanz",
      "Notfallplan",
      "Risikominderung",
      "Risikotransfer"
    ],
    "Explanation": "Die vorgeschlagenen Maßnahmen beziehen sich auf Tests, die eine Form der Risikominderung darstellen (vgl. CTFL-Lehrplan V4.0, Abschnitt 5.2.4, letzter Absatz, Punkteliste).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 36,
    "Text": "Welche der folgenden Aussagen zum Zweck und Inhalt von Testberichten ist zutreffend?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Testabschlussberichte werden in regelmäßigen Abständen erstellt und verteilt, um die Stakeholder hinsichtlich des Fortschrittes zu informieren.",
      "Ein Testfortschrittsbericht beinhaltet u. a. die Bewertung der Qualität des Produkts sowie etwaige Abweichungen vom Zeitplan.",
      "Ein Testabschlussbericht wird erstellt, wenn eine Teststufe abgeschlossen wurde, und baut auf Testfortschrittsberichten und zusätzlichen Daten auf.",
      "Testfortschrittsberichte werden während des Testabschlusses erstellt, um die Erfüllung der Endekriterien belegen zu können."
    ],
    "Explanation": "Testabschlussberichte werden an Zeitpunkten erstellt und verteilt, an denen inhaltlich ähnliche Aufgaben abgeschlossen wurden, beispielsweise ein Projekt, eine Teststufe, eine Testart, eine Iteration etc. (vgl. CTFL-Lehrplan V4.0, Abschnitt 5.3.2, Absatz 1, letzter Satz und Absatz 3).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 37,
    "Text": "Sie müssen eines der automatisierten Testskripte aktualisieren, um es an eine neue Anforderung anzupassen.<br><br>Welcher Prozess schreibt vor, dass Sie eine neue Version des Testskripts in der Versionsverwaltung erstellen?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Management der Verfolgbarkeit",
      "Wartungstest",
      "Konfigurationsmanagement",
      "Anforderungsmanagement"
    ],
    "Explanation": "Um das Testen zu unterstützen, kann das Konfigurationsmanagement die Versionsverwaltung aller Testelemente beinhalten (vgl. CTFL-Lehrplan V4.0, Abschnitt 5.4, 4. Absatz, 1. Satz).",
    "CorrectIndexes": [
      2
    ]
  },
  {
    "Id": 38,
    "Text": "Sie haben in Ihrer Rolle als Projektleiter den folgenden Fehlerbericht von den Entwicklern weitergeleitet bekommen, weil sie die beschriebene Anomalie nicht reproduzieren können.\n\nAnwendung hängt sich auf\n\nID 713-20230401 2022-Mai-03 – John Doe – Abgelehnt\n\nDie Anwendung hängt sich nach der Eingabe von \"Testeingabe: $ä\" im Feld Name auf dem Bildschirm zur Erstellung eines neuen Benutzers auf. Ich habe versucht, mich abzumelden und mit dem Konto test_admin01 anzumelden, das gleiche Problem. Mit anderen Testadministratorkonten versucht, dasselbe Problem. Keine Fehlermeldung erhalten; das Protokoll (siehe Anhang) enthält eine fatale Fehlermeldung. Basierend auf dem Testfall TC-1305 sollte die Anwendung die bereitgestellten Eingaben akzeptieren und den Benutzer erstellen. Bitte beheben Sie dieses Problem mit hoher Priorität, da diese Funktion mit REQ-0012 zusammenhängt, die eine wichtige neue fachliche Anforderung ist.\n\nWelche wichtigen Informationen, die für die Entwickler nützlich gewesen wären, fehlen in diesem Fehlerbericht?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Erwartetes Ergebnis und tatsächliches Ergebnis",
      "Referenzen und Fehlerstatus",
      "Testumgebung und Testobjekt (inkl. Version)",
      "Priorität und Schweregrad"
    ],
    "Explanation": "Wir wissen nicht, in welcher Testumgebung die Anomalie entdeckt wurde, und wir wissen auch nicht, welches Testobjekt bzw. welche Anwendung (und welche Version) davon betroffen ist (vgl. CTFL-Lehrplan V4.0, Abschnitt 5.5, 3. Absatz, 4. Aufzählungspunkt).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 3,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 39,
    "Text": "Welche Testaktivitäten unterstützt ein Werkzeug zur Erstellung von Testdaten?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Testüberwachung und Teststeuerung",
      "Kapitel 4 - Testanalyse und Testentwurf",
      "Testentwurf und Testrealisierung",
      "Testabschluss"
    ],
    "Explanation": "Werkzeuge für Testentwurf und Testrealisierung erleichtern die Erstellung von Testfällen, Testdaten und Testläufen (vgl. CTFL-Lehrplan V4.0, Abschnitt 6.1, 3. Aufzählungspunkt).",
    "CorrectIndexes": [
      2
    ],
    "KLevel": 2,
    "Topic": "Kapitel 6 - Testwerkzeuge"
  },
  {
    "Id": 40,
    "Text": "Welcher Punkt ist ein mögliches Risiko bei der Testautomatisierung?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Es kann zu unbekannten Nebenwirkungen im operativen Betrieb kommen.",
      "Es bestehen unrealistische Erwartungen hinsichtlich der Funktionalität eines Werkzeugs.",
      "Testwerkzeuge sind möglicherweise nicht zuverlässig genug.",
      "Es kann die verfügbare Zeit für manuelle Tests auf Dauer reduziert sein."
    ],
    "Explanation": "Die unrealistische Erwartung besteht darin, dass in einigen Fällen das Management der Meinung ist, dass mit der Einführung eines Testwerkzeugs alle Probleme gelöst sind (vgl. CTFL-Lehrplan V4.0, Abschnitt 6.2, 3. Absatz, 1. Aufzählungspunkt).",
    "CorrectIndexes": [
      1
    ],
    "KLevel": 1,
    "Topic": "Kapitel 6 - Testwerkzeuge"
  },
  {
    "Id": 41,
    "Text": "Welche der folgenden Aussagen  beschreibt  ein typisches Ziel von Softwaretests?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Fehler im Testobjekt identifizieren und beheben.",
      "Eine effektive Kommunikation mit dem Entwicklungsteam sicherstellen.",
      "Nachweisen, dass gesetzliche Vorgaben umgesetzt wurden.",
      "Vertrauen in die Qualität des Testobjekts aufbauen."
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Das Vertrauen in die Qualität des Testobjekts wird durch das Ausführen von Tests, die bestanden werden, aufgebaut (siehe CTFL-Lehrplan V4.0, Abschnitt 1.1.1, 8. Aufzählungspunkt).",
    "KLevel": 1,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 42,
    "Text": "Ein Designer erstellt das Layout einer Benutzeroberfläche, berücksichtigt dabei jedoch nicht die Bedürfnisse behinderter Nutzer – möglicherweise aufgrund von Müdigkeit. Ein Entwickler implementiert dieses Design, verzichtet aber aus Zeitgründen auf eine geeignete Ausnahmebehandlung für Bonusberechnungen.<br> Nach der Einführung des Systems beschweren sich einige Nutzer über die eingeschränkte Barrierefreiheit, woraufhin das Unternehmen von der Aufsichtsbehörde mit einer Geldstrafe belegt wird. Der Fehler in der Bonusberechnung bleibt zunächst unbemerkt. Welche der folgenden Aussagen IST KORREKT?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Die fehlerhafte Bonusberechnung ist ein sporadisch auftretenderFehlerzustand.",
      "Die verhängte Geldstrafe wegen mangelnder Barrierefreiheit stellt einenAusfall dar.",
      "Der Zeitdruck, unter dem der Entwickler stand, ist eine wesentliche Ursache.",
      "Das Design enthält eine offensichtliche Fehlerwirkung des Designers."
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Der Fehler wird vom Programmierer gemacht, und dieser Fehler wird dadurch verursacht, dass der Programmierer unter großem Zeitdruck arbeitet, was die eigentliche Ursache für den nachfolgenden Fehler ist (siehe CTFL-Lehrplan V4.0, Abschnitt 1.2.3, 1. + 4. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 43,
    "Text": "Tester leiten aus denselben Testbedingungen jeweils unterschiedliche Testfälle ab.<br>Welcher Grundsatz des Testens wird dadurch am besten verdeutlicht?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Tests nutzen sich ab.",
      "„Keine Fehler“ bedeutet ein brauchbares System.",
      "Frühes Testen spart Zeit und Geld.",
      "Fehlerzustände treten gehäuft auf."
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Das Prinzip des „Tests nutzen sich ab“ befasst sich mit der Idee, dass die Wiederholung identischer Tests an unverändertem Code wahrscheinlich keine neuen Fehler aufdeckt und daher eine Änderung der Tests unerlässlich sein kann. Durch die Verwendung von Testbedingungen, um jedes Mal neue Tests zu generieren, sind die Tests nicht identisch und das Risiko des „Tests nutzen sich ab“ wird reduziert (siehe CTFL-Lehrplan V4.0, Abschnitt 1.3, 5. Grundsatz).",
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 44,
    "Text": "Gegeben sind die folgenden Testaufgaben:<br><br>1.Testfälle aus Testbedingungen ableiten <br>2.Wiederverwendbare Testware identifizieren <br>3.Testfälle in Testabläufen organisieren <br>4.Testbasis und Testobjekte bewerten <br><br>Und die folgenden Testaktivitäten: <br><br>A. Testanalyse <br>B. Testentwurf <br>C. Testrealisierung <br>D. Testabschluss <br><br>Welche der folgenden Zuordnungen passt AM BESTEN zu den Aufgaben und Aktivitäten?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "1B, 2A, 3D, 4C",
      "1B, 2D, 3C, 4A",
      "1C, 2A, 3B, 4D",
      "1C, 2D, 3A, 4B"
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Die KORREKTE Zuordnung ist: 1B, 2D, 3C, 4A. <br>• 1B: Testentwurf umfasst das Ableiten von Testfällen aus Testbedingungen. <br>• 2D: Testabschluss schließt die Identifikation wiederverwendbarer Testware ein. <br>• 3C: Testrealisierung organisiert Testfälle in Testabläufen. <br>• 4A: Testanalyse bewertet die Testbasis und das Testobjekt.",
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 45,
    "Text": "Welche der folgenden Optionen ist das beste Beispiel für Testware, die im Rahmen der Testrealisierung erstellt wird? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Testabschlussbericht",
      "Testdaten für Eingaben und erwartete Ergebnisse in einer Datenbank",
      "Liste der Komponenten zur Einrichtung der Testumgebung",
      "Testfälle"
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Testdaten wie Daten in einer Datenbank, die für Testeingaben und erwartete Ergebnisse verwendet werden, sind ein Ergebnis der Testrealisierung (siehe CTFL-Lehrplan V4.0, Abschnitt 1.4.3, 5. Aufzählungspunkt).",
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 46,
    "Text": "Welche der folgenden Optionen beschreibt AM BESTEN eine typische Aufgabe einer Person in  der Testmanagementrolle?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Bewertung von Testbasis und Testobjekt",
      "Definition der Anforderungen an die Testumgebung",
      "Bewertung der Testbarkeit des Testobjekts",
      "Erstellung des Testabschlussberichts"
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Die Testmanagementrolle umfasst Aktivitäten wie Testplanung, Testüberwachung und Teststeuerung sowie Testabschluss. Das Erstellen des Testabschlussberichts ist eine Hauptaufgabe der Testmanagementrolle im Rahmen der Testabschlussaktivität (siehe CTFL-Lehrplan V4.0, Abschnitt 1.4.5, 2. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 47,
    "Text": "Welche der folgenden Aussagen beschreibt einen einen Vorteil des Whole-Team-Ansatzes?<br><br>Wählen Sie EINE Option (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Verbesserte Kommunikation im Team",
      "Geringere individuelle Verantwortung für Qualität",
      "Schnellere Bereitstellung von Ergebnissen für Endbenutzer",
      "Weniger Zusammenarbeit mit externen Geschäftsnutzern"
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Der Whole-Team-Ansatz fördert eine robuste Kommunikation und Zusammenarbeit zwischen den Teammitgliedern, was ein wesentlicher Vorteil ist (siehe CTFL-Lehrplan V4.0, Abschnitt 1.5.2, 2. Absatz).",
    "KLevel": 1,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 48,
    "Text": "Welche der folgenden Aussagen zur Unabhängigkeit des Testens werden AM EHESTEN als Vorteile angesehen?<br><br>Wählen Sie ZWEI Optionen! (2 aus 5)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Die Tester arbeiten an einem anderen Standort als die Entwickler.",
      "Tester hinterfragen die Annahmen, die Entwickler beim Schreiben von Code treffen.",
      "Es herrsche eine konfrontative Beziehung zwischen Testern und Entwicklern.",
      "Entwickler gehen davon aus, dass Tester die alleinige Verantwortung für Qualität tragen.",
      "Tester bringen eine andere Sichtweise als Entwickler ein."
    ],
    "CorrectIndexes": [ 1, 2 ],
    "Explanation": "Tester haben oft unterschiedliche Perspektiven und können Annahmen und Spezifikationen hinterfragen, was die Wahrscheinlichkeit erhöht, Fehler und Mängel zu erkennen (siehe CTFL-Lehrplan V4.0, Abschnitt 1.5.3, 3. Absatz).",
    "Explanation2": "Tester und Entwickler haben unterschiedliche technische Hintergründe und kognitive Vorurteile, was es Testern ermöglicht, Fehler zu erkennen, die Entwicklern möglicherweise entgehen (siehe CTFL-Lehrplan V4.0, Abschnitt 1.5.3, 3. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 49,
    "Text": "Welche der folgenden Optionen ist eine bewährte Testpraxis, die auf alle Softwareentwicklungslebenszyklen angewendet wird?<br><br>Wählen Sie EINE Option (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Jede Teststufe verfolgt eigene, eindeutig definierte Testziele.",
      "Testrealisierung und -ausführung sollten während der jeweiligen Entwicklungsphase beginnen.",
      "Mit dem Testentwurf sollte begonnen werden, sobald erste Entwürfe verfügbar sind.",
      "Für jede dynamische Testaktivität gibt es eine entsprechende statische Aktivität."
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Jede Teststufe hat spezifische und eindeutige Testziele, um sicherzustellen, dass unterschiedliche Aspekte des Testobjekts geprüft werden. Überschneidungen der Testziele können zu unnötiger Duplizierung führen (siehe CTFL- Lehrplan V4.0, Abschnitt 2.1.2, 2. Aufzählungspunkt).",
    "KLevel": 1,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 50,
    "Text": "Welche der folgenden Optionen ist ein Beispiel für testgetriebene Entwicklung?<br><br>Wählen Sie EINE Option (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Verhaltensgetriebene Entwicklung",
      "Teststufengetriebene Entwicklung",
      "Funktionsgetriebene Entwicklung",
      "Performanzgetriebene Entwicklung"
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Verhaltensgetriebene Entwicklung (Behavior-Driven Development, BDD) ist ein bekanntes Beispiel für einen testgetriebenen Entwicklungsansatz (siehe CTFL- Lehrplan V4.0, Abschnitt 2.1.3, 4. Absatz).",
    "KLevel": 1,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 51,
    "Text": "Welche der folgenden Aussagen beschreibt AM BESTEN eine typische Herausforderung bei der Einführung von DevOps?<br><br>Wählen Sie EINE Option (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Sicherstellen, dass nicht-funktionale Anforderungen ausreichend berücksichtigt werden.",
      "Umgang mit häufig wechselnden Testumgebungen.",
      "Bedarf an zusätzlichen manuellen Testern mit spezieller Erfahrung.",
      "Integration der Testautomatisierung in die Bereitstellungspipeline."
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Eine der größten Herausforderungen bei der Implementierung von DevOps ist das Einrichten und Warten der Testautomatisierung als integraler Bestandteil der Bereitstellungspipeline, einschließlich der Einführung und Pflege von CI/CD-Tools (siehe CTFL-Lehrplan V4.0, Abschnitt 2.1.4, 3. Absatz, 3. Aufzählungspunkt).",
    "KLevel": 2,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 52,
    "Text": "Welche der folgenden Aussagen beschreibt den Zweck von Retroperspektiven AM BESTEN?<br><br>Wählen Sie EINE Option (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Retrospektiven dienen dazu, Beiträge einzelner Teammitglieder kritisch zu bewerten.",
      "Retrospektiven ermöglichen es dem Team, erfolgreiche Aktivitäten zu identifizieren, um sie künftig beizubehalten.",
      "Retrospektiven bieten Raum für das Ansprechen von Bedenken gegenüber dem Management in geschütztem Rahmen.",
      "Retrospektiven sind Sitzungen, in denen das Team technische Entscheidungen für die nächste Iteration trifft."
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Retrospektiven bieten Teams die Möglichkeit, über erfolgreiche Aktivitäten zu sprechen, die beibehalten werden sollten, und über Verbesserungsmöglichkeiten nachzudenken (siehe CTFL-Lehrplan V4.0, Abschnitt 2.1.6, 1. Absatz, Aufzählungspunkte).",
    "KLevel": 2,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 53,
    "Text": "Welcher der folgenden Tests gehört AM EHESTEN zu den Funktionstests?<br><br>Wählen Sie EINE Option (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Der Test überprüft, ob die Sortierfunktion eine Liste korrekt in aufsteigender Reihenfolge sortiert.",
      "Der Test überprüft, ob die Sortierfunktion das Sortieren innerhalb einer Sekunde abschließt.",
      "Der Test überprüft, wie einfach sich die Sortierfunktion auf absteigende Sortierung umstellen lässt.",
      "Der Test überprüft, ob die Sortierfunktion auch auf einer 64-Bit-Architektur korrekt funktioniert."
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Die Überprüfung, ob die Sortierfunktion die Elemente korrekt sortiert, bewertet die funktionale Korrektheit der Funktion und gehört zu den Funktionstests (siehe CTFL-Lehrplan V4.0, Abschnitt 2.2.2, 2. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 54,
    "Text": "Welche der folgenden Aussagen beschreibt AM EHESTEN einen typischen Auslöser für Wartungstests eines Währungsumtauschsystems?<br><br>Wählen Sie EINE Option (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Entwickler berichteten über Schwierigkeiten bei Änderungen am System, woraufhin das Testteam eine technische Überprüfung einleitete.",
      "Die Rückerstattungsoption des Währungsumtauschsystems wurde entfernt, da sie den Kunden nicht immer den richtigen Betrag zurückzahlte.",
      "Das agile Team begann mit der Implementierung einer neuen Kundenbindungsfunktion.",
      "Die Sprachunterstützung wurde erweitert, um Transaktionen in Englisch und der Landessprache zu ermöglichen."
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Systemänderungen wie Korrekturen oder Erweiterungen sind typische Auslöser für Wartungstests. Das Entfernen der Rückerstattungsoption ist eine Korrektur, die Wartungstests erforderlich macht (siehe CTFL-Lehrplan V4.0, Abschnitt 2.3, 3. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 55,
    "Text": "Welches der folgenden Artefakte kann NICHT durch statisches Testen untersucht werden?<br><br>Wählen Sie EINE Option (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Vertrag",
      "Testkonzept",
      "Verschlüsselter Code",
      "Test-Charta"
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Verschlüsselter Code ist zu komplex, um von Menschen interpretiert werden zu können, und nicht geeignet für die Analyse durch statische Kapitel 6 - Testwerkzeuge, wenn er korrekt verschlüsselt ist. Daher kann er nicht effektiv durch statisches Testen untersucht werden (siehe CTFL-Lehrplan V4.0, Abschnitt 3.1.1, 3. Absatz).",
    "KLevel": 1,
    "Topic": "Kapitel 3 - Statischer Test"
  },
  {
    "Id": 56,
    "Text": "Welche der folgenden Aussagen beschreibt den Wert des statischen Testens AM BESTEN?<br><br>Wählen Sie EINE Option (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Die bei statischen Tests gefundenen Fehlertypen unterscheiden sich von denen, die durch dynamische Tests gefunden werden können.",
      "Dynamische Tests können alle Fehler erkennen, die auch bei statischen Tests gefunden werden, sowie weitere.",
      "Dynamische Tests erkennen einige, aber nicht alle Fehler, die durch statische Tests gefunden werden können.",
      "Statische Tests können alle Fehler erkennen, die durch dynamische Tests gefunden werden, sowie zusätzliche."
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Dies ist die beste Beschreibung des Werts Statischer Tests. Statische Tests können viele Fehler frühzeitig und ohne Codeausführung finden, z. B. Designprobleme oder Verstöße gegen Standards. Dynamische Tests hingegen entdecken nur Fehler, die bei der Ausführung auftreten – nicht aber rein strukturelle oder dokumentationsbezogene Mängel. Diese Aussage betont die Komplementarität und Vorteile Statischer Tests am besten.",
    "KLevel": 2,
    "Topic": "Kapitel 3 - Statischer Test"
  },
  {
    "Id": 57,
    "Text": "Nachfolgend finden Sie fünf Beschreibungen typischer Aktivitäten im Rahmen eines strukturierten Reviews: <br><br>1. Entdeckte Anomalien werden diskutiert und bezüglich ihres Ihres Status, ihrer Zuständigkeit undmöglicher Folgemaßnahmen bewertet. <br>2. Probleme werden erfasst und notwendige Anpassungen vor der Abnahme des Arbeitsergebnissses vorgenommen. <br>3. Gutachter entwickeln Vorschläge und Fragen zum Arbeitsergebnis und identifizieren dabei mögliche Anomalien. <br>4.  Ziel  und  Zeitplan werden definiert, um den Ablauf fokussiert und effizient zu gestalten. <br>5. Die Teilnehmenden erhalten Zugriff auf das zu prüfende Dokument. <br><br>Welche der folgenden Optionen entspricht der korrekten Reihenfolge dieser Aktivitäten im Reviewprozess?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "4 – 3 – 5 – 2 – 1",
      "4 – 5 – 3 – 1 – 2",
      "5 – 4 – 1 – 3 – 2",
      "5 – 4 – 3 – 2 – 1"
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Diese Reihenfolge stimmt mit dem generischen Reviewprozess überein (siehe CTFL-Lehrplan V4.0, Abschnitt 3.2.2, 3. Absatz): <br>• Planung (4): Ziele und Zeitplan der Reviews werden festgelegt. <br>• Reviewbeginn (5): Teilnehmer erhalten Zugriff auf das zu überprüfende Element. <br>• Individuelles Review (3): Reviewer identifizieren Anomalien und stellen Fragen. <br>• Kommunikation und Analyse (1): Anomalien werden diskutiert und Entscheidungen werden getroffen. <br>• Behebung und Testberichterstattung (2): Probleme werden behoben und Berichte werden erstellt.",
    "KLevel": 2,
    "Topic": "Kapitel 3 - Statischer Test"
  },
  {
    "Id": 58,
    "Text": "Welcher Teilnehmer im Reviewprozess ist dafür verantwortlich, sicherzustellen, dass die Reviewsitzungen effektiv verlaufen und dass jeder Teilnehmer in den Sitzungen seine Meinung frei äußern kann?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Manager",
      "Moderator",
      "Vorsitzender",
      "Reviewleiter"
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Der Moderator (auch Facilitator genannt) ist dafür verantwortlich, sicherzustellen, dass die Reviewsitzungen effektiv ablaufen. Dazu gehören Zeitmanagement, Moderation von Diskussionen und die Schaffung einer sicheren Umgebung, in der alle Teilnehmer ihre Meinungen frei äußern können (siehe CTFL- Lehrplan V4.0, Abschnitt 3.2.3, 3. Aufzählungspunkt).",
    "KLevel": 1,
    "Topic": "Kapitel 3 - Statischer Test"
  },
  {
    "Id": 59,
    "Text": "Sie testen eine E-Commerce-Webanwendung  und erhalten die folgende Anforderung: <br><br>REQ 05-017. Wenn die Gesamtkosten der Einkäufe 100 € überschreiten, erhält der Kunde einen Rabatt von 5 % auf zukünftige Einkäufe. Andernfalls erhält der Kunde keinen Rabatt. <br><br>Welche Testverfahren eignen sich AM BESTEN zur Ableitung von Testfällen aus dieser Anforderung?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "White-Box-Testverfahren",
      "Black-Box-Testverfahren",
      "Erfahrungsbasierte Testverfahren",
      "Risikobasierte Testverfahren"
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Die Anforderung spezifiziert das gewünschte Verhalten des Systems und enthält klare Geschäftsregeln, wie „übersteigt 100 €“. Diese Art von Information eignet sich gut für Black- Box-Testverfahren wie Grenzwertanalyse oder Entscheidungstabellentest (siehe CTFL-Lehrplan V4.0, Abschnitt 4.1, 3. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 60,
    "Text": "Ein System zur Online-Buchung von Kinokarten berechnet die Art des Rabatts auf Grundlage des Geburtsjahrs (BY) und des aktuellen Jahres (CY) wie folgt: <br><br>Sei D = CY – BY. <br>• Wenn D < 0: Anzeige der Fehlermeldung „Geburtsjahr kann nicht größer als aktuelles Jahr sein“. <br>• Wenn 0 ≤ D < 18: Kinder-/Jugendrabatt. <br>• Wenn 18 ≤ D < 65: Kein Rabatt. <br>• Wenn D ≥ 65: Rentnerrabatt. <br><br>Die Testsuite enthält bereits zwei Testfälle: <br><br>• BY = 1990, CY = 2020 → erwartetes Ergebnis: Kein Rabatt <br>• BY = 2030, CY = 2029 → erwartetes Ergebnis: Fehlermeldung <br><br>Welche der folgenden Testdaten sollten ergänzt werden, um eine vollständige Äquivalenzklassenüberdeckung der Rabattberechnung zu erreichen?<br><br>Wählen Sie ZWEI Optionen! (2 aus 5)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "BY = 2001, CY=2065",
      "BY = 1900, CY=1965",
      "BY = 1965, CY =1900",
      "BY = 2011, CY=2029",
      "BY = 2000, CY=2000"
    ],
    "CorrectIndexes": [ 1, 4 ],
    "Explanation": "CY - BY = 65. Dieser Eingabewert gehört zur Klasse „Rentnerrabatt“, die in den bisherigen Testfällen noch nicht abgedeckt ist.",
    "Explanation2": "CY - BY = 0. Dieser Eingabewert gehört zur Klasse „Kinder-/Jugendrabatt“, die in den bisherigen Testfällen noch nicht abgedeckt ist. Es gibt zwei Äquivalenzklassen, die noch nicht abgedeckt sind, und zwar die Klassen, die dem „Rentnerrabatt“ (b) und dem „Kinder-/Jugendrabatt“ (e) entsprechen.",
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 61,
    "Text": "Sie testen ein Temperaturüberwachungssystem für eine Kühlanlage. Das System erhält die Temperatur (in ganzen Grad Celsius) als Eingabe. Liegt die Temperatur zwischen 0 und 2 Grad einschließlich, zeigt das System die Nachricht „Temperatur OK“ an. Liegt sie unter 0 Grad, erscheint „Temperatur zu niedrig“, und bei höheren Temperaturen über 2 Grad erscheint „Temperatur zu hoch“. <br><br>Welches der folgenden Sets von Testeingaben liefert unter Verwendung der Zwei-Wert-Grenzwertanalyse DIE VOLLSTÄNDIGSTE Überdeckung der Grenzwerte?<br><br>Wählen Sie EINE Option (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "-1, 3",
      "0, 2",
      "-1, 0, 2, 3",
      "-2, 0, 2, 4"
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Dieses Set deckt alle relevanten Grenzwerte ab: • -1 für die Klasse „Temperatur zu niedrig“ • 0 und 2 für die Klasse „Temperatur OK“ • 3 für die Klasse „Temperatur zu hoch“",
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 62,
    "Text": "Sie entwerfen Testfälle basierend auf der folgenden Entscheidungstabelle.",
    "Diagram": null,
    "Table": [
      {
        " ": "C1: Alter",
        "R1": "0-18",
        "R2": "19-65",
        "R3": "19-65",
        "R4": ">65",
        "R5": "0-8",
        "R6": "19-65",
        "R7": ">65"
      },
      {
        "": "C2: Erfahrung",
        "R1": "-",
        "R2": "0-4",
        "R3": ">4",
        "R4": "-",
        "R5": "-",
        "R6": "-",
        "R7": "-"
      },
      {
        " ": "C3: Registriert?",
        "R1": "NEIN",
        "R2": "NEIN",
        "R3": "NEIN",
        "R4": "NEIN",
        "R5": "JA",
        "R6": "JA",
        "R7": "JA"
      },
      {
        " ": "Kategorie",
        "R1": "A",
        "R2": "A",
        "R3": "B",
        "R4": "B",
        "R5": "B",
        "R6": "D",
        "R7": "C"
      }
    ],
    "PostText": "Bisher haben Sie die folgenden Testfälle entworfen: <br><br>• TC1: 19-jähriger, nicht registrierter Mann ohne Erfahrung; erwartetes Ergebnis: Kategorie A <br>• TC2: 65-jährige, nicht registrierte Frau mit 5 Jahren Erfahrung; erwartetes Ergebnis: Kategorie B <br>• TC3: 66-jähriger, registrierter Mann ohne Erfahrung; erwartetes Ergebnis: Kategorie C <br>• TC4: 65-jährige, registrierte Frau mit 4 Jahren Erfahrung; erwartetes Ergebnis: Kategorie D<br><br>Welche der folgenden Testfälle erhöht die Überdeckung der Entscheidungstabelle, wenn er zu den bestehenden Testfällen hinzugefügt wird?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "66-jähriger, nicht registrierter Mann ohne Erfahrung; erwartetes Ergebnis: Kategorie B.",
      "55-jährige, nicht registrierte Frau mit 2 Jahren Erfahrung; erwartetes Ergebnis: Kategorie A.",
      "19-jährige, registrierte Frau mit 5 Jahren Erfahrung; erwartetes Ergebnis: Kategorie D.",
      "Kein zusätzlicher Testfall kann die bereits erreichte Überdeckung der Entscheidungstabelle erhöhen."
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Die Bedingungen „66-jährig“, „nicht registriert“ und „ohne Erfahrung“ entsprechen der Regel R4, die bisher nicht von den bestehenden Testfällen abgedeckt wurde. Das Hinzufügen dieses Testfalls erhöht die Überdeckung der Entscheidungstabelle.",
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 63,
    "Text": "Sie wenden den Zustandsübergangstest auf das Zimmerreservierungssystem an, das durch die folgende Zustandsübergangstabelle mit vier Zuständen und fünf Ereignissen modelliert wird. ",
    "Diagram": "images/frage63_diagramm.png",
    "Table": null,
    "Options": [
      "Nicht verfügbar, Verfügbar, Zimmer wechseln, Nicht verfügbar, Stornieren",
      "Verfügbar, Zimmer wechseln, Nicht verfügbar, Verfügbar, Bezahlen",
      "Verfügbar, Zimmer wechseln, Verfügbar, Zimmer wechseln, Nicht verfügbar",
      "Nicht verfügbar, Stornieren, Zimmer wechseln, Verfügbar, Bezahlen"
    ],
    "CorrectIndexes": [ 1 ],
    "PostText": "Angenommen, alle Testfälle beginnen im Zustand 'Anfordern'.<br><br>Welcher der folgenden Testfälle (Abfolge von Ereignissen), erreicht die GRÖßTMÖGLICHE ÜBERDECKUNG GÜLTIGER ÜBERGÄNGE?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Explanation": "Diese Abfolge von fünf Ereignissen deckt 5 verschiedene Übergänge ab (das erste „Verfügbar“-Ereignis entspricht einem Übergang zwischen S1 und S2 und das zweite „Verfügbar“-Ereignis entspricht einem Übergang zwischen S3 und S2, so dass zwei verschiedene Übergänge abgedeckt werden). Dieser Testfall deckt 5 von 7 gültigen Übergängen ab und erreicht die höchste gültige Übergangsüberdeckung.",
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 64,
    "Text": "Ihre Testsuite S für ein Programm  P erreicht 100 % Anweisungsüberdeckung. Sie besteht aus drei Testfällen, von denen jeder jeweils 50 % Anweisungsüberdeckung erreicht.<br><br>Welche der folgenden Aussagen IST KORREKT?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Das Ausführen von S deckt alle möglichen Fehler in P auf.",
      "S erreicht 100 % Zweigüberdeckung für P.",
      "Jede ausführbare Anweisung in P, die einen Fehler enthält, wurde mindestens einmal durch S ausgeführt.",
      "Nach dem Entfernen eines Testfalls aus S erreichen die verbleibenden beiden Testfälle weiterhin 100% Anweisungsüberdeckung."
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Eine 100 %ige Anweisungsüberdeckung bedeutet, dass jede ausführbare Anweisung mindestens einmal ausgeführt wurde.",
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 65,
    "Text": "Warum erleichtert White-Box-Testen die Fehlererkennung auch dann, wenn die Softwarespezifikation vage, veraltet oder unvollständig ist?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Testfälle werden auf der Basis der Struktur des Testobjekts und nicht auf der Spezifikation entworfen.",
      "Für jedes White-Box-Testverfahren kann die Überdeckung genau definiert und leicht gemessen werden.",
      "White-Box-Testverfahren sind sehr gut geeignet, um Auslassungen in den Anforderungen zu erkennen.",
      "White-Box-Testverfahren können sowohl im statischen als auch im dynamischen Testen eingesetzt werden."
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "White-Box-Tests berücksichtigen die gesamte Softwareimplementierung, was die Fehlererkennung erleichtert, selbst wenn die Spezifikation unklar oder unvollständig ist. Dies ermöglicht es, Fehlerzustände zu finden, die nicht durch Black- Box-Tests aufgedeckt werden können, wie z. B. zusätzliche Funktionen im Code, die nicht vorgesehen waren (siehe CTFL-Lehrplan V4.0, Abschnitt 4.3.3, 1. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 66,
    "Text": "Welches der folgenden Beispiele wird durch den Tester bei der Anwendung der intuitiven Testfallermittlung AM WENIGSTEN vorhergesehen?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Der Entwickler hat die Formel in der User-Story zur Berechnung der Zinsen falsch verstanden.",
      "Der Entwickler hat „FA = A*(1+IR^N)“ statt „FA = A*(1+IR)^N“ im Quellcode geschrieben.",
      "Der Entwickler hat das Seminar über die neue Gesetzgebung zu Zinseszinsen verpasst.",
      "Die Genauigkeit der vom System berechneten Zinsen ist nicht ausreichend."
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Dies ist ein Beispiel für eine potenzielle Grundursache eines Defekts, aber keine direkte Vorhersage eines Fehlers, Defekts oder Ausfalls. Es liegt außerhalb des Fokus der intuitiven Testfallermittlung.",
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 67,
    "Text": "Welche der folgenden Aussagen über das explorative Testen IST KORREKT?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Testfälle werden vor Beginn einer explorativen Testsitzung entworfen.",
      "Der Tester darf die Testausführung vornehmen, aber nicht den Testentwurf.",
      "Ergebnisse des explorativen Testens erlauben verlässliche Vorhersagen über verbleibende Fehler.",
      "Während des explorativen Testens kann der Tester Black-Box-Testverfahren einsetzen."
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Während des explorativen Testens können Tester alle Testverfahren anwenden, einschließlich Black-Box-Testverfahren, die sie für geeignet halten (siehe CTFL-Lehrplan V4.0, Abschnitt 4.4.2, 4. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 68,
    "Text": "Welche kollaborative Praxis beim Schreiben von User-Storys hilft dem Team am besten, ein gemeinsames Verständnis über das zu liefernde Produkt zu entwickeln?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Planungspoker, um einen Konsens über den Aufwand für die Umsetzung einer User-Story zu erreichen.",
      "Reviews, um Inkonsistenzen und Widersprüche in einer User-Story zu erkennen.",
      "Iterationsplanung, um User-Storys mit dem höchsten Geschäftswert zu priorisieren.",
      "Gespräch, um ein gemeinsames Verständnis über die Nutzung der Software zu entwickeln."
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Gespräche sind eine kollaborative Praxis, die es dem Team ermöglicht, ein kollektives Verständnis über die Anforderungen zu erreichen. Sie helfen oft bei der Definition von Akzeptanzkriterien und der Klärung von Unklarheiten (siehe CTFL- Lehrplan V4.0, Abschnitt 4.5.1, 2. Aufzählungspunkt).",
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 69,
    "Text": "Sie haben gerade begonnen, Testfälle für die folgende User-Story zu entwerfen. <br><br>Als Kunde möchte ich die Suchergebnisse nach Preisspanne filtern können, damit ich Produkte innerhalb meines Budgets leichter finden kann. <br><br>Akzeptanzkriterien: <br><br>1. Der Filter sollte für alle Versionen der Anwendung ab Version 3.0 funktionieren. <br>2. Der Filter sollte dem Kunden ermöglichen, eine Preisspanne mit einem Mindest- und einem Höchstpreis festzulegen. <br>3. Die Suchergebnisse sollten sich dynamisch aktualisieren, wenn der Kunde den Preisbereichsfilter anpasst. <br><br>In allen Testfällen lautet die Vorbedingung wie folgt: Es sind nur zwei Produkte verfügbar, Produkt A und Produkt B. Produkt A kostet 100 € und Produkt B kostet 110 €.",
    "Diagram": null,
    "PostText": "Welches der folgenden Beispiele ist DAS BESTE Beispiel für einen Testfall für, diese 'User-Story?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Table": null,
    "Options": [
      "Webseite aufrufen und den Filter so einstellen, dass Preise zwischen 90 € und 100 € angezeigt werden. Erwartetes Ergebnis: Ergebnisse zeigen nur Produkt A. Höchstpreis auf 110 € setzen. Erwartetes Ergebnis: Ergebnisse beinhalten jetzt sowohl Produkt A als auch Produkt B.",
      "Webseite aufrufen. Erwartetes Ergebnis: Die Standardmindest- und -höchstpreise betragen jeweils 100 € und 110 €. Produkt C zum Lager hinzufügen, mit einem Preis von 120 €. Die Webseite des Kunden aktualisieren. Erwartetes Ergebnis: Der Standardhöchstpreis ändert sich auf 120 €.",
      "Webseite aufrufen und den Filter so einstellen, dass Preise zwischen 90 € und 115 € angezeigt werden. Erwartetes Ergebnis: Ergebnisse zeigen sowohl Produkt A als auch Produkt B. Währung von EUR auf USD ändern. Erwartetes Ergebnis: Der Filterbereich ändert sich korrekt zu USD-Werten.",
      "Webseite mit drei verschiedenen Browsern aufrufen: Edge, Chrome und Opera. In jedem Browser den Filter zwischen 90 € und 110 € einstellen. Erwartetes Ergebnis: Ergebnisse beinhalten sowohl Produkt A als auch Produkt B und das Layout der Ergebnisse ist in allen drei Browsern gleich."
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Dieser Testfall deckt die Akzeptanzkriterien 2 und 3 ab: • Akzeptanzkriterium 2: Überprüfung, ob eine Preisspanne definiert werden kann. • Akzeptanzkriterium 3: Überprüfung, ob die Suchergebnisse dynamisch aktualisiert werden, wenn der Filter angepasst wird (siehe CTFL-Lehrplan V4.0, Abschnitt 4.5.3, 5. Absatz).",
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 70,
    "Text": "Welche der folgenden Optionen beschreiben AM BESTEN typische Endekriterien in einem Testprojekt?<br><br>Wählen Sie ZWEI Option! (2 aus 5)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Das Budget ist genehmigt.",
      "Das Budget ist aufgebraucht.",
      "Die Testbasis ist verfügbar.",
      "Testfälle haben mindestens 80 % Anweisungsüberdeckung erreicht.",
      "Alle Testanalysten sind nach ISTQB Foundation Level zertifiziert."
    ],
    "CorrectIndexes": [ 1, 3 ],
    "Explanation": "Das Aufbrauchen des Budgets kann als Endekriterium betrachtet werden, da es signalisiert, dass die verfügbaren Ressourcen vollständig genutzt wurden und somit keine weiteren Aktivitäten durchgeführt werden können (siehe CTFL-Lehrplan V4.0, Abschnitt 5.1.3, 4. Absatz).",
    "Explanation2": "Überdeckung ist ein typisches Maß für die Gründlichkeit und wird häufig als Endekriterium verwendet, um zu bewerten, ob das Testen abgeschlossen ist (siehe CTFL-Lehrplan V4.0, Abschnitt 5.1.3, 3. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 71,
    "Text": "Das Team möchte die Zeit abschätzen, die ein Tester benötigt, um vier Testfälle auszuführen. Es wurden folgende Aufwandsschätzungen für einen Testfall ermittelt: <br><br>• Best-Case: 1 Stunde <br>• Worst-Case: 8 Stunden <br>• Wahrscheinlichstes Fall: 3 Stunden <br><br>Das Team verwendet das Drei-Punkt-Schätzverfahren. Wie hoch ist die geschätzte Gesamtzeit zur Ausführung aller vier Testfälle?<br><br>Wählen Sie EINE OPTION! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "14 Stunden",
      "3,5 Stunden",
      "16 Stunden",
      "12 Stunden"
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Beim Drei-Punkt-Schätzverfahren wird die endgültige Schätzung E wie folgt berechnet: E = (a + 4m + b) / 6, wobei a die optimistischste Schätzung, m die wahrscheinlichste Schätzung und b die pessimistischste Schätzung ist. In diesem Fall beträgt die Schätzung für die Ausführung eines einzelnen Testfalls: E = (1h + 4*3h + 8h) / 6 = 3,5 Stunden Somit beträgt die Gesamtzeit, die der Tester benötigt, um vier Testfälle auszuführen: 3,5h * 4 = 14 Stunden (siehe CTFL-Lehrplan V4.0, Abschnitt 5.1.4, Absatz „Drei-Punkt-Schätzung“).",
    "KLevel": 3,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 72,
    "Text": "Die Tabelle zeigt die Nachverfolgbarkeitsmatrix zwischen Testfällen undu Anforderungen. Ein „X“ bedeutet, dass ein Testfall die  Anforderung überdeckt.",
    "Diagram": null,
    "Table": [
      {
        "": "TC1",
        "Req1": "X",
        "Req2": "",
        "Req3": "X",
        "Req4": "X",
        "Req5": "",
        "Req6": "",
        "Req7": "X"
      },
      {
        "": "TC2",
        "R1": "X",
        "R2": "",
        "R3": "",
        "R4": "",
        "R5": "X",
        "R6": "",
        "R7": "X"
      },

      {
        "": "TC3",
        "R1": "",
        "R2": "",
        "R3": "",
        "R4": "",
        "R5": "X",
        "R6": "X",
        "R7": ""
      },

      {
        "": "TC4",
        "R1": "",
        "R2": "X",
        "R3": "",
        "R4": "",
        "R5": "",
        "R6": "",
        "R7": ""
      }

    ],
    "PostText": "Die Testfälle sollen mithilfe des Verfahrens der zusätzlichen Über- deckung priorisiert und anschließend alle ausgeführt werden. <br><br>Welcher Testfall sollte gemäß diesem Verfahren ALS LETZTER ausgeführt werden?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "TC1",
      "TC2",
      "TC3",
      "TC4"
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "TC1 erreicht die höchste Überdeckung (4/7 – Req1, Req3, Req4 und Req7) und sollte daher zuerst ausgeführt werden. Req2, Req5 und Req6 sind noch nicht abgedeckt. Der nächste Testfall, der die höchste zusätzliche Überdeckung der verbleibenden Anforderungen erreicht, ist TC3, der 2 dieser 3 Anforderungen (Req5 und Req6) abdeckt. Daher sollte TC3 als Zweites ausgeführt werden.<br><br>Nun ist die einzige Anforderung, die noch nicht abgedeckt ist, Req2, die von TC4 abgedeckt wird. Daher sollte TC4 als dritter Testfall ausgeführt werden.<br><br>Demnach wird der letzte ausgeführte Testfall TC2 sein. <br><br>Daher:",
    "KLevel": 3,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 73,
    "Text": "Wie unterstützen Testquadranten das Testen?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Sie helfen bei der Testplanung, indem sie den Testprozess in vier Stufen unterteilen, die den vier grundlegenden Teststufen entsprechen: Komponententests, Integrationstests, Systemtests und Abnahmetests.",
      "Sie helfen bei der Bewertung hoher Überdeckungsstufen (z. B. Anforderungsüberdeckung) basierend auf niedrigen Überdeckungsstufen (z. B. Codeüberdeckung).",
      "Sie helfen nicht-technischen Stakeholdern, verschiedene Testarten zu verstehen und sich bewusst zu werden, dass einige Testarten für bestimmte Teststufen relevanter sind als andere.",
      "Sie helfen agilen Teams, Kommunikationsstrategien auf Basis psychologischer Typen zu entwickeln und Beziehungen zwischen Rollen zu modellieren."
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Die Testquadranten bieten eine strukturierte Möglichkeit, die Beziehung zwischen Testarten und ihrer Rolle in den Bereichen Teamunterstützung (z. B. geschäftsorientiert) und Produktkritik (z. B. technologieorientiert) zu erklären, was für Stakeholder hilfreich ist (siehe CTFL-Lehrplan V4.0, Abschnitt 5.1.7, 2. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 74,
    "Text": "Für ein bestimmtes Risiko beträgt dessen Risikostufe 1.000 €, und die geschätzte Eintrittswahrscheinlichkeit liegt bei 50 %.<br><br>Was ist das Schadensausmaß des Risikos?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "500 €",
      "2.000 €",
      "50.000 €",
      "200 €"
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Die Risikobewertung kann einen quantitativen oder qualitativen Ansatz oder eine Mischung aus beidem verwenden. Beim quantitativen Ansatz wird die Risikostufe als Produkt aus Eintrittswahrscheinlichkeit und Schadensausmaß des Risikos berechnet. Also, Risikostufe = Eintrittswahrscheinlichkeit * Schadensausmaß des Risikos, daher gilt: <br><br>Schadensausmaß des Risikos = Risikostufe / Eintrittswahrscheinlichkeit. <br><br>In unserem Fall: Schadensausmaß des Risikos = Risikostufe / Eintrittswahrscheinlichkeit = 1.000 € / 50 % = 1.000 € / 0,5 = 2.000 €.",
    "KLevel": 1,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 75,
    "Text": "Welche der folgenden Optionen stellen Produktrisiken dar?<br><br>Wählen Sie ZWEI Option! (2 aus 5)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Umfangserweiterung",
      "Schlechte Architektur",
      "Kostensenkung",
      "Schlechte Werkzeugunterstützung",
      "Antwortzeiten zu lang"
    ],
    "CorrectIndexes": [ 1, 4 ],
    "Explanation": "Schlechte Architektur ist ein Produktrisiko, da sie sich direkt auf die interne Struktur und Qualität des Produkts bezieht, was die Funktionalität, Wartbarkeit und Zuverlässigkeit des Produkts beeinflussen kann (siehe CTFL-Lehrplan V4.0, Abschnitt 5.2.2, 4. Absatz).",
    "Explanation2": "Zu lange Antwortzeiten sind ein Produktrisiko, da sie sich auf die Leistungsfähigkeit und Gebrauchstauglichkeit des Produkts auswirken, die wichtige Produkteigenschaften darstellen (siehe CTFL-Lehrplan V4.0, Abschnitt 5.2.2, 4. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 76,
    "Text": "Welcher der folgenden Zwecke gehört NICHT zu den gültigen Zielen eines Testberichts?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Verfolgung des Testfortschritts und Identifizierung von Bereichen, die weitere Aufmerksamkeit erfordern.",
      "Bereitstellung von Informationen über die durchgeführten Tests, deren Ergebnisse und gefundene Probleme oder Fehlerzustände",
      "Bereitstellung detaillierter Informationen zu jedem einzelnen Fehlerzustand, einschließlich der Schritte zur Reproduktion",
      "Bereitstellung von Informationen über die für den nächsten Zeitraum geplanten Tests"
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Dies ist der Zweck eines Fehlerberichts, nicht eines Testberichts. Testberichte konzentrieren sich auf den Gesamtstatus und die Ergebnisse des Testens, nicht auf die detaillierte Beschreibung einzelner Fehler (siehe CTFL-Lehrplan V4.0, Abschnitt 5.3.2, 1. Absatz und Abschnitt 5.5).",
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 77,
    "Text": "Der Benutzer meldete einen Softwarefehler. Ein Ingenieur aus dem Support-Team fragte den Benutzer nach der Softwareversionsnummer, in der der Fehler beobachtet wurde. Basierend auf der Versionsnummer stellte das Team alle Dateien des entsprechenden Release zusammen. Ein Entwickler konnte anschließend eine Analyse durchführen,  den Fehlerzustand identifizieren und beheben.<br><br>Welche der folgenden Optionen ermöglichte dem Team diese Vorgehensweise?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Risikomanagement",
      "Testüberwachung und Teststeuerung",
      "Whole-Team-Ansatz",
      "Konfigurationsmanagement"
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Konfigurationsmanagement ist die Disziplin zur Identifikation, Kontrolle und Nachverfolgung von Arbeitsergebnissen. Es legt Aufzeichnungen über geänderte Konfigurationselemente an, wenn eine neue Basislinie erstellt wird. Mit Hilfe des Konfigurationsmanagements ist es möglich, zu einer vorherigen Basislinie zurückzukehren, um frühere Testergebnisse zu reproduzieren (siehe CTFL-Lehrplan V4.0, Abschnitt 5.4, 3. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 78,
    "Text": "Betrachten Sie den folgenden Fehlerbericht für ein Buchausleihsystem.<br><br> Fehler-ID: 001 <br>Titel: Rückgabe eines Buches wird nicht registriert. <br>Schweregrad: Hoch <br>Priorität: nicht angegeben <br>Umgebung: Windows 11, Google Chrome <br>Beschreibung: Beim Versuch, ein Buch mit der Funktion „Buch zurückgeben“ zurückzugeben, registriert das System die Rückgabe nicht. Das Buch bleibt weiterhin dem Benutzer zugewiesen. <br><br>Schritte zur Reproduktion: <br>Melden Sie sich als Benutzer mit einem ausgeliehen Buch im Buchausleihsystem an. <br>Klicken Sie auf die Schaltfläche „Buch zurückgeben“ für das ausgeliehene Buch. <br>Das System registriert die Rückgabe nicht und das Buch wird weiterhin als ausgeliehen angezeigt. <br>Erwartetes Ergebnis: Das Buch sollte als zurückgegeben registriert  und dem Benutzer nicht mehr zugewiesen sein. <br>Tatsächliches Ergebnis: Das Buch bleibt dem Benutzer zugewiesen. <br>Anhänge: [leere Liste] <br><br>Welche der folgenden Optionen hilft dem Entwickler AM EHESTEN, den Fehler schnell zu reproduzieren?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Hinzufügen spezifischer Informationen zu den betroffenen Benutzern und Büchern im Abschnitt „Beschreibung“.",
      "Ergänzung des fehlenden Wertes im Feld „Priorität“.",
      "Hinzufügen von Speicherabzügen und Datenbankschnappschüssen im Abschnitt „Anhänge“ nach jedem beschriebenen Schritt.",
      "Wiederholung desselben Testfalls in verschiedenen Umgebungen und Erstellung separater Fehlerberichte für jede Umgebung."
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Das Hinzufügen solcher Informationen, wie spezifische Benutzer- und Buchdaten, ermöglicht es dem Entwickler, die gleichen Eingabedaten zu verwenden, wodurch die Wahrscheinlichkeit steigt, dass der Fehlerzustand schnell reproduziert wird. Dies beschleunigt den Fehlerbehebungsprozess erheblich (siehe CTFL-Lehrplan V4.0, Abschnitt 5.5, 3. Absatz).",
    "KLevel": 3,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 79,
    "Text": "Werkzeuge aus welchen Testwerkzeugkategorien erleichtern höchstwahrscheinlich die Testausführung?<br><br>Wählen Sie ZWEI Optionen! (2 aus 5)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Kooperationswerkzeuge",
      "DevOps-Werkzeuge",
      "Managementwerkzeuge",
      "Nicht-funktionale Testwerkzeuge",
      "Testentwurfs- und Implementierungswerkzeuge"
    ],
    "CorrectIndexes": [ 1, 3 ],
    "Explanation": "DevOps-Werkzeuge unterstützen die Lieferpipeline, einschließlich Continuous Integration/Continuous Delivery (CI/CD), die automatische Builds und automatisierte Tests umfasst. Dadurch erleichtern sie die Testausführung erheblich (siehe CTFL-Lehrplan V4.0, Abschnitt 6.1, 6. Aufzählungspunkt).",
    "Explanation2": "Werkzeuge für nicht-funktionale Tests ermöglichen das Testen von Aspekten wie Performanz, Last und Stress, die manuell schwer durchzuführen sind. Diese Werkzeuge erleichtern die dynamische Testausführung in nicht-funktionalen Bereichen (siehe CTFL-Lehrplan V4.0, Abschnitt 6.1, 5. Aufzählungspunkt).",
    "KLevel": 2,
    "Topic": "Kapitel 6 - Testwerkzeuge"
  },
  {
    "Id": 80,
    "Text": "Welche der folgenden Optionen ist höchstwahrscheinlich ein Risiko der Testautomatisierung?<br><br>Wäählen Sie EINE Option! (1 aus 4)",
    "Diagram": null,
    "Table": null,
    "Options": [
      "Die Entdeckung zusätzlicher schwerwiegender Fehler.",
      "Bereitstellung von Maßnahmen, die für Menschen zu kompliziert sind, um sie abzuleiten.",
      "Inkompatibilität mit der Entwicklungsplattform",
      "Deutlich reduzierte Testausführungszeiten"
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Inkompatibilität mit der Entwicklungsplattform ist ein typisches Risiko der Testautomatisierung, da sie die Integration, Durchführung und den Datenaustausch zwischen Testautomatisierung und Testobjekt erschwert oder unmöglich macht (siehe CTFL-Lehrplan V4.0, Abschnitt 6.2, 3. Absatz, 7. Aufzählungspunkt).",
    "KLevel": 1,
    "Topic": "Kapitel 6 - Testwerkzeuge"
  },
  {
    "Id": 81,
    "Text": "Welche der folgenden Optionen stellt ein typisches Testziel dar?<br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Validieren, ob die dokumentierten Anforderungen erfüllt sind.",
      "Fehlerwirkungen provozieren und Fehlerzustände identifizieren.",
      "Fehler initiieren und deren Ursachen identifizieren.",
      "Verifikation, ob das Testobjekt die Erwartungen der Benutzer erfüllt."
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Das gezielte Hervorrufen von Fehlerwirkungen und die Identifikation von Fehlerzuständen ist ein zentrales Ziel dynamischer Tests (siehe CTFL-Lehrplan V4.0, Abschnitt 1.1.1, 2. Aufzählungspunkt).",
    "KLevel": 1,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 82,
    "Text": "Welche der folgenden Aussagen beschreibt den Unterschied zwischen Testen und Debugging am besten? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Beim Testen wird die Ursache von Fehlerzuständen identifiziert, während beim Debugging die Fehlerzustände analysiert und behoben werden.",
      "Testen ist eine negative Aktivität, während Debugging eine positive Aktivität ist.",
      "Beim Testen werden Fehler gefunden, während beim Debugging Fehler behoben werden.",
      "Beim Testen wird die Fehlerursache gefunden, während beim Debugging die Fehlerursache behoben wird."
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Beim Testen werden Fehler gefunden - direkt (z.B. bei Reviews oder statischer Analyse) oder indirekt (durch das Auslösen von Fehlerwirkungen im dynamischen Test). Debugging ist eine vom Testen getrennte Aktivität, meist durch Entwickler durchgeführt, und umfasst sowohl die Lokalisierung als auch die Behebung von Fehlern (siehe CTFL-Lehrplan V4.0, Abschnitt 1.1.2, 1. und 2. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 83,
    "Text": "Ein Grundsatz des Testens lautet: <br><br>„Der Trugschluss, dass ein fehlerfreies System auch automatisch brauchbar ist, muss vermieden werden.“ <br><br>Welches der folgenden Beispiele zeigt, wie dieser Grundsatz in der Praxis berücksichtigt wird? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Darauf hinweisen, dass Testen niemals die Abwesenheit von Fehlern beweisen kann.",
      "Die Endnutzer bei der Durchführung von Abnahmetests unterstützen.",
      "Sicherstellen, dass das gelieferte System keine Implementierungsfehler enthält.",
      "Tests verändern, die keine Fehler finden, um die Fehlerdichte zu verringern."
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Durch die Unterstützung des Endbenutzers bei der Durchführung von Abnahmetests sollte es möglich sein, zu validieren, ob das System die Bedürfnisse und Erwartungen der Benutzer erfüllt (siehe CTFL-Lehrplan V4.0, Abschnitt 1.3, 7. Grundsatz, letzter Satz).",
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 84,
    "Text": "Bei welchen der folgenden Testaktivitäten werden typischerweise die Testverfahren der Grenzwertanalyse und der Äquivalenzklassenbildung angewendet? <br><br>Wählen Sie ZWEI Optionen! (2 aus 5)",
    "Options": [
      "Testrealisierung",
      "Testentwurf",
      "Testdurchführung",
      "Testüberwachung",
      "Testanalyse"
    ],
    "CorrectIndexes": [ 1, 4 ],
    "Explanation": "Beim Testentwurf werden wahrscheinlich Testverfahren eingesetzt, um Testfälle aus Testbedingungen und Überdeckungselemente zu erstellen (siehe CTFL-Lehrplan V4.0, Abschnitt 1.4.1, 5. Absatz).",
    "Explanation2": "Die Testanalyse beinhaltet wahrscheinlich den Einsatz von Testverfahren, um Testbedingungen zu identifizieren (siehe CTFL-Lehrplan V4.0, Abschnitt 1.4.1, 4. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 85,
    "Text": "Gegeben sind folgende Testaktivitäten: <br><br>A. Testanalyse <br>B. Testentwurf <br>C. Testrealisierung <br>D. Testabschluss <br><br>Und folgende mögliche Testergebnisse (Testmittel): <br><br>1. Testüberdeckungen <br>2. Änderungsanforderungen <br>3. Testausführungsplan <br>4. Priorisierte Testbedingungen <br><br>Welche der folgenden Aussagen beschreibt die Zuordnung von Testaktivität zu erzeugtem Testmittel am zutreffendsten? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "1B, 2D, 3C, 4A",
      "1B, 2D, 3A, 4C",
      "1D, 2C, 3A, 4B",
      "1D, 2C, 3B, 4A"
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Die richtige Übereinstimmung ist: 1B, 2D, 3C, 4A (siehe CTFL-Lehrplan V4.0, Abschnitt 1.4.3).",
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 86,
    "Text": "Welche der folgenden Aussagen über Testrollen in der agilen Softwareentwicklung trifft AM ZUTREFFENSTEN zu? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "In agilen Teams liegt das Testmanagement hauptsächlich beim Team, während das Testen überwiegend von externen Spezialisten durchgeführt wird.",
      "Die operative Rolle des Testens übernimmt vor allem die Testüberwachung und -steuerung, während das Testmanagement für Planung und Durchführung zuständig ist.",
      "In der agilen Entwicklung übernimmt ein externer Testmanager teamübergreifende Aufgaben, während das Team selbst einige Testmanagementaufgaben intern umsetzt.",
      "Das Testmanagement ist hauptsächlich für Testanalyse und Testentwurf verantwortlich, während die operative Rolle des Testens vor allem Implementierung und Ausführung übernimmt."
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "In der agilen Softwareentwicklung können einige der Testmanagementaufgaben vom agilen Team selbst übernommen werden. Bei Testaktivitäten, die mehrere Teams innerhalb einer Organisation betreffen, können diese Aufgaben jedoch auch von Testmanagern außerhalb des Entwicklungsteams durchgeführt werden (siehe CTFL-Lehrplan V4.0, Abschnitt 1.4.5, 2. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 87,
    "Text": "Was ist ein typischer Vorteil des ganzheitlichen Teamansatzes (Whole-Team-Ansatz) in agilen Projekten? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Das Team arbeitet ohne dedizierte Tester.",
      "Die Teamdynamik wird verbessert.",
      "Nur Mitglieder des Fachbereichs sind für das Testen zuständig.",
      "Teams werden durch zusätzliche Rollen vergrößert."
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Der Whole-Team-Ansatz fördert eine bessere Teamdynamik durch stärkere Zusammenarbeit und effektivere Kommunikation. Dies führt zu einer effizienteren Arbeitsweise, da Synergien durch den gezielten Einsatz unterschiedlicher Kompetenzen entstehen (siehe CTFL-Lehrplan V4.0, Abschnitt 1.5.2, 2. Absatz).",
    "KLevel": 1,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 88,
    "Text": "Welche der folgenden Aussagen zur Unabhängigkeit des Testens trifft am ehesten zu? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Unabhängige Tester entdecken häufig Fehler, weil sie mit einer anderen Perspektive als die Entwickler testen – diese Unabhängigkeit kann jedoch zu Spannungen im Team führen.",
      "Entwickler finden nur wenige Fehler in ihrem eigenen Code, und Tester mit ähnlichem Hintergrund sind beim Finden derselben Fehler ebenfalls eingeschränkt.",
      "Unabhängiges Testen ist nur durch externe Tester außerhalb des Teams oder der Organisation möglich, was jedoch die Kenntnis der Fachdomäne erschwert.",
      "Tester außerhalb des Teams gelten als unabhängiger, während interne Tester eher für Projektverzögerungen verantwortlich gemacht werden."
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Unabhängige Tester sind effektiver in der Fehlerfindung, da sie eine andere Perspektive und Voreingenommenheit als Entwickler haben. Dies kann jedoch zu Kommunikationsproblemen und einer angespannten Beziehung zwischen Testern und Entwicklern führen. Zudem können unabhängige Tester als Engpass im Releaseprozess wahrgenommen werden (siehe CTFL-Lehrplan V4.0, Abschnitt 1.5.3, 1. und 4. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 1 - Grundlagen des Testens"
  },
  {
    "Id": 89,
    "Text": "Welche der folgenden Aussagen beschreibt eine bewährte Testpraxis, die in allen Softwareentwicklungs-Lebenszyklen gilt? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Jeder Teststufe ist eine bestimmte Entwicklungsstufe direkt zugeordnet.",
      "Jedes Testziel entspricht einem bestimmten Entwicklungsziel.",
      "Jede Testaktivität steht in direktem Zusammenhang mit einer Benutzeraktivität.",
      "Zu jeder Softwareentwicklungsaktivität gibt es eine passende Testaktivität."
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Die Qualitätskontrolle bezieht sich auf alle Entwicklungsaktivitäten, was bedeutet: Für jede Softwareentwicklungsaktivität gibt es eine entsprechende Testaktivität (siehe CTFL-Lehrplan V4.0, Abschnitt 2.1.2, 1. Aufzählungspunkt).",
    "KLevel": 1,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 90,
    "Text": "Welcher der folgenden Ansätze ist ein Beispiel für eine Test-First-Entwicklung? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Komponententestgetriebene Entwicklung",
      "Integrationstestgetriebene Entwicklung",
      "Systemtestgetriebene Entwicklung",
      "Akzeptanztestgetriebene Entwicklung"
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Die Akzeptanztestgetriebene Entwicklung (ATDD) ist ein bekanntes Beispiel für einen Test-First-Ansatz, bei dem Akzeptanztests zur Definition der Anforderungen vor der Implementierung genutzt werden (siehe CTFL-Lehrplan V4.0, Abschnitt 2.1.3, 3. Absatz, 2. Aufzählungspunkt).",
    "KLevel": 1,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 91,
    "Text": "Welche der folgenden Aussagen beschreibt den Shift-Left-Ansatz im Softwaretesten am zutreffendsten? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Manuelle Tests werden nach Zustimmung der Entwickler automatisiert, um Zeit und Kosten zu sparen.",
      "Testaktivitäten werden möglichst früh im Entwicklungsprozess eingeplant, um Fehler frühzeitig zu erkennen und Qualitätskosten zu senken.",
      "Tester automatisieren Regressionstests, sobald Zeit dafür zur Verfügung steht – beginnend mit Komponententests.",
      "Tester werden geschult, um frühe Aktivitäten zu übernehmen, sodass spätere Tests besser automatisiert werden können."
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Shift-Left betont, wie wichtig es ist, mit dem Testen früher im Softwareentwicklungslebenszyklus (SDLC) zu beginnen. Die Implementierung von Shift-Left-Tests erfordert zusätzliche Schulungen sowie einen höheren Aufwand und höhere Kosten in den frühen Phasen des SDLC, aber die Gesamteinsparungen sollten höher sein (siehe CTFL-Lehrplan V4.0, Abschnitt 2.1.5. 1. und 3. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 92,
    "Text": "Welches der folgenden Ereignisse ist im Rahmen einer Retrospektive am wenigsten wahrscheinlich? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Die Qualität künftiger Testobjekte wird verbessert, weil Schwächen in den Entwicklungspraktiken erkannt werden.",
      "Die Testeffizienz steigt, weil Testumgebungen künftig automatisiert werden.",
      "Endanwender gewinnen ein besseres Verständnis für Entwicklungs- und Testprozesse.",
      "Entwickler geben Rückmeldung, durch die automatisierte Testskripte optimiert werden."
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Zu den Teilnehmern an Retrospektiven gehören typischerweise Tester, Entwickler, Architekten, Produktbesitzer und Businessanalysten, aber Endbenutzer werden selten zu diesen Treffen eingeladen oder nehmen selten daran teil – und es ist auch unwahrscheinlich, dass sie Berichte von diesen Treffen erhalten. Daher ist es sehr unwahrscheinlich, dass sie durch Retrospektiven mehr über die Entwicklungs- und Testprozesse erfahren und verstehen (siehe CTFL-Lehrplan V4.0, Abschnitt 2.1.6, 1. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 93,
    "Text": "In welcher der folgenden Teststufen steht die Validierung im Vordergrund, und sie wird typischerweise nicht von Testern durchgeführt? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Komponententest",
      "Komponentenintegrationstest",
      "Systemintegrationstest",
      "Abnahmetest"
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Abnahmetests dienen der Überprüfung, ob das System die fachlichen Anforderungen des Benutzers erfüllt und für den Einsatz bereit ist. Im Idealfall werden diese Tests von den Endbenutzern durchgeführt (siehe CTFL-Lehrplan V4.0, Abschnitt 2.2.1, 5. Aufzählungspunkt).",
    "KLevel": 2,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 94,
    "Text": "Nach einem Software-Update schlägt das Navigationssystem z.B. Routen durch Einbahnstraßen in falscher Richtung vor – ein klarer Verstoß gegen Verkehrsregeln. <br><br>Welche der folgenden Maßnahmen sind in diesem Fall AM SINNVOLSTEN? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Nur Fehlernachtests",
      "Fehlernachtests gefolgt von Regressionstests",
      "Nur Regressionstests",
      "Regressionstests gefolgt von Fehlernachtests"
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Durch Fehlernachtests wird überprüft, ob die Aktualisierungen zu einer korrekten Implementierung geführt haben. Anschließend werden Regressionstests durchgeführt, um sicherzustellen, dass keine Fehler in unveränderten Bereichen des Systems eingeführt oder aufgedeckt wurden (siehe CTFL-Lehrplan V4.0, Abschnitt 2.2.3, 2. und 4. Absatz).",
    "KLevel": 2,
    "Topic": "Kapitel 2 - Testen während des Softwareentwicklungslebenszyklus"
  },
  {
    "Id": 95,
    "Text": "Welche der folgenden Fehlerarten können typischerweise durch statische Tests – im Gegensatz zu dynamischen Tests – erkannt werden? <br><br>Wählen Sie ZWEI Optionen! (2 aus 5)",
    "Options": [
      "Widersprüche zwischen verschiedenen Teilen der Entwurfsspezifikation",
      "Längere Antwortzeiten führen zur Frustration der Benutzer",
      "Ein Fehler tritt auf, wenn beim Speichern einer Datei der Speicherplatz knapp wird",
      "Eine im Code deklarierte Variable wird nicht verwendet",
      "Das System benötigt beim Erstellen eines Berichts übermäßig viel Speicher"
    ],
    "CorrectIndexes": [ 0, 3 ],
    "Explanation": "Zwei verschiedene Teile der Entwurfsspezifikation stimmen aufgrund der Komplexität des Entwurfs nicht überein – dies ist ein Beispiel für einen Spezifikationsfehler, der Inkonsistenzen, Mehrdeutigkeiten, Widersprüche, Auslassungen, Ungenauigkeiten und Duplikate umfasst, die am einfachsten durch statische Tests gefunden werden können (siehe CTFL-Lehrplan V4.0, Abschnitt 3.1.3, 2. Absatz, 2. Aufzählungspunkt).",
    "Explanation2": "Eine Variable wird deklariert, dann aber nie im Programm verwendet – dies ist ein Beispiel für einen Programmierfehler, der Variablen mit undefinierten Werten, nicht deklarierte Variablen, doppelten oder nicht zugänglichen Code und übermäßige Codekomplexität umfasst und am einfachsten durch statische Tests gefunden werden kann (siehe CTFL-Lehrplan V4.0, Abschnitt 3.1.1 und Abschnitt 3.1.3, 2. Absatz, 3. Aufzählungspunkt).",
    "KLevel": 2,
    "Topic": "Kapitel 3 - Statischer Test"
  },
  {
    "Id": 96,
    "Text": "Welcher der folgenden Punkte ist ein typischer Vorteil von frühem und häufigem Stakeholder-Feedback? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Änderungen an Anforderungen werden frühzeitig erkannt und können schneller umgesetzt werden.",
      "Geschäftsinteressenten erhalten eine Schulung zu den Benutzeranforderungen.",
      "Product Owner können ihre Anforderungen beliebig oft ändern.",
      "Endnutzer werden vor der Freigabe über nicht umgesetzte Anforderungen informiert."
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Es kann von großem Nutzen sein, frühzeitig und häufig im Softwareentwicklungsprozess Feedback von Stakeholdern einzuholen. Es erleichtert die frühzeitige Kommunikation potenzieller Qualitätsprobleme, kann Missverständnisse über Anforderungen verhindern und stellt sicher, dass Änderungen der Stakeholder-Anforderungen schneller verstanden und umgesetzt werden (siehe CTFL-Lehrplan V4.0, Abschnitt 3.2.1, 2. Absatz, 1. Satz).",
    "KLevel": 1,
    "Topic": "Kapitel 3 - Statischer Test"
  },
  {
    "Id": 97,
    "Text": "Ordnen Sie die folgenden Reviewarten den entsprechenden Beschreibungen zu:\n\n1. Technisches Review\n2. Informelles Review\n3. Inspektion\n4. Walkthrough\n\nA. Konzentriert sind auf Ziele wie Vertrauensaufbau, Generierung neuer Ideen und Schulung von Gutachtern unter Leitung des Autors.\nB. Dient hauptsächlich der Erkennung potenzieller Mängel und erfordert keine formelle Dokumentation.\nC. Ziel ist es, möglichst viele Fehler zu finden und Metriken für die Prozessverbesserung zu erheben.\nD. Zielt darauf ab, durch qualifizierte Gutachter einen Konsens zu erreichen, Entscheidungen zu treffen und neue Ideen zu entwickeln.\n\nWelche der folgenden Optionen beschreibt die korrekte Zuordnung am besten? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "1A, 2B, 3C, 4D",
      "1D, 2B, 3C, 4A",
      "1B, 2C, 3D, 4A",
      "1C, 2D, 3A, 4B"
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Das technische Review wird von technisch qualifizierten Gutachtern unter der Leitung eines Moderators durchgeführt. Die Ziele bestehen darin, einen Konsens zu erzielen und Entscheidungen über technische Probleme zu treffen, während gleichzeitig die Qualität bewertet und Vertrauen in das Arbeitsprodukt aufgebaut wird, neue Ideen generiert werden, Autoren motiviert und befähigt werden, sich zu verbessern, und Anomalien aufgedeckt werden. → Zuordnung: 1D\n\nDas informelle Review hat das primäre Ziel, Anomalien zu erkennen. Der Prozess ist nicht definiert und erfordert keine formale Dokumentation. → Zuordnung: 2B\n\nDie Inspektion ist die formellste Art eines Reviews, das Hauptziel besteht darin, die meisten Anomalien zu finden. Zudem werden Metriken erhoben, die zur Verbesserung des SDLC beitragen können. → Zuordnung: 3C\n\nDer Walkthrough wird vom Autor geleitet und dient u.a. der Schulung von Gutachtern, der Generierung neuer Ideen, der Konsensfindung und der Motivation der Autoren. → Zuordnung: 4A\n\nSomit ist Antwort b) korrekt.",
    "KLevel": 2,
    "Topic": "Kapitel 3 - Statischer Test"
  },
  {
    "Id": 98,
    "Text": "Welcher der folgenden Faktoren trägt typischerweise zum Erfolg eines Reviews bei? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Das Management wird als Gutachter in alle Reviews eingebunden.",
      "Große Arbeitsprodukte werden in kleinere, überschaubare Einheiten aufgeteilt.",
      "Ziel des Reviews ist ausschließlich die Bewertung durch den Gutachter.",
      "Für jedes Review wird genau ein Dokument eingeplant."
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Um erfolgreiche Überprüfungen sicherzustellen, ist es wichtig, das Arbeitsergebnis in Teile aufzuteilen, die klein genug sind, um in einem angemessenen Zeitrahmen überprüft zu werden. Damit wird verhindert, dass Prüfer während einzelner Überprüfungen oder Überprüfungsbesprechungen den Fokus verlieren (siehe CTFL-Lehrplan V4.0, Abschnitt 3.2.5, 3. Aufzählungspunkt).",
    "KLevel": 1,
    "Topic": "Kapitel 3 - Statischer Test"
  },
  {
    "Id": 99,
    "Text": "Was ist der zentrale Unterschied zwischen Black-Box-Verfahren und erfahrungsbasierten Testverfahren? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Das getestete Objekt",
      "Die Teststufe, auf der das Testverfahren angewendet wird.",
      "Die zugrunde liegende Testbasis",
      "Die Phase im Softwareentwicklungslebenszyklus (SDLC), in der das Testverfahren eingesetzt wird."
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Black-Box-Testverfahren (auch spezifikationsbasierte Verfahren genannt) basieren auf einer Analyse des spezifizierten Verhaltens des Testobjekts ohne Bezug auf seine interne Struktur. Die Testbasis ist also in der Regel eine Spezifikation. Erfahrungsbasierte Testverfahren nutzen das Wissen und die Erfahrung von Testern effektiv für den Entwurf und die Implementierung von Testfällen. Dies bedeutet, dass der Tester beim Entwerfen von Tests die Spezifikation möglicherweise überhaupt nicht verwenden darf (siehe CTFL-Lehrplan V4.0, Abschnitt 4.1 und Abschnitt 2.2.2).",
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 100,
    "Text": "Ein PIN-Validator akzeptiert nur gültige PINs und lehnt ungültige ab. <br><br>Eine PIN gilt als gültig, wenn sie aus genau vier Ziffern besteht, von denen mindestens zwei unterschiedlich sind. <br><br>Welche der folgenden Datensätze deckt alle relevanten Äquivalenzklassen ab (gültige und ungültige PINs)? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "112, 1111, 1234, 123456",
      "1, 123, 1111, 1234",
      "12, 112, 1112, 11112",
      "1, 111, 1111, 11111"
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Die Äquivalenzklassen für gültige und ungültige PINs sind:\n\n1. Gültige PINs: Eine PIN mit genau vier Ziffern, von denen mindestens zwei unterschiedlich sind (z. B. 1234, 1123, 5678).\n2. Ungültige PINs: PINs mit weniger als vier Ziffern (z. B. 1, 12, 123); PINs mit mehr als vier Ziffern (z. B. 123456, 11111); PINs mit vier identischen Ziffern (z. B. 1111, 2222).\n\nOption a) ist korrekt:\n- 112 → Ungültig (weniger als vier Ziffern)\n- 1111 → Ungültig (vier gleiche Ziffern)\n- 1234 → Gültig (vier Ziffern, mindestens zwei verschieden)\n- 123456 → Ungültig (mehr als vier Ziffern)\n\nDamit sind alle relevanten Äquivalenzklassen abgedeckt.",
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 101,
    "Text": "Gegeben ist die folgende Geschäftsregel:\n\nEINGABE: Wert (Ganzzahl)\nWENN (Wert ≤ 100 ODER Wert ≥ 200) DANN schreibe „Wert falsch“\nELSE schreibe „Wert OK“\n\nSie möchten Testfälle mit Hilfe einer Grenzwertanalyse mit jeweils zwei Werten pro Grenze entwerfen.\n\nWelcher der folgenden Mengen von Testwerten deckt die relevanten Grenzwerte am besten ab? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "100, 150, 200, 201",
      "99, 100, 200, 201",
      "98, 99, 100, 101",
      "101, 150, 199, 200"
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Die Äquivalenzpartitionen sind: {…, 99, 100}, {101, 102, …, 198, 199}, {200, 201, …}. Somit gibt es 4 Grenzwerte: 100, 101, 199 und 200.\n\nBei der 2-Werte-Grenzwertanalyse gibt es für jeden Grenzwert zwei Überdeckungselemente (den Grenzwert und seinen nächsten Nachbarn, der zur angrenzenden Partition gehört). Da die nächsten Nachbarn auch Grenzwerte in der angrenzenden Partition sind, gibt es nur vier Überdeckungselemente.\n\nAntwort d) ist korrekt, da sie die größte Überdeckung der Grenzwerte erreicht.",
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 102,
    "Text": "Gegeben ist ein System zur Analyse von Fahrprüfungsergebnissen. Die folgenden Regeln wurden in einer Entscheidungstabelle formuliert:",
    "Table": [
      {
        " ": "C1: Erster Prüfungsversuch?",
        "R1": " - ",
        "R2": " - ",
        "R3": " F "
      },
      {
        "": "C2: Theoretische Prüfung bestanden?",
        "R1": " T ",
        "R2": " F ",
        "R3": " - "
      },
      {
        " ": "C3: Praktische Prüfung bestanden?",
        "R1": " T ",
        "R2": " - ",
        "R3": " F "
      },
      {
        " ": "",
        "R1": "",
        "R2": "",
        "R3": ""
      },
      {
        " ": "Führerschein austellen?",
        "R1": " X ",
        "R2": " ",
        "R3": " "
      },
      {
        " ": "Zusätzliche Fahrstunden anfordern?",
        "R1": " ",
        "R2": " ",
        "R3": " X "
      },
      {
        " ": "Antrag auf Wiederholung der Prüfung?",
        "R1": " ",
        "R2": " X ",
        "R3": " "
      }
    ],
    "PostText": "Welche Kombination von Eingabedaten zeigt, dass die Entscheidungstabelle widersprüchliche Regeln enthält? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "C1 = T, C2 = T, C3 = F",
      "C1 = T, C2 = F, C3 = T",
      "C1 = T, C2 = T, C3 = T und C1 = F, C2 = T, C3 = T",
      "C1 = F, C2 = F, C3 = F"
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Die Kombination (F, F, F) passt sowohl zu R2 als auch zu R3, aber R2 und R3 haben unterschiedliche Aktionen („Zusätzliche Fahrstunden anfordern“ und „Antrag auf Wiederholung der Prüfung“). Das zeigt einen Widerspruch zwischen den Regeln (siehe CTFL-Lehrplan V4.0, Abschnitt 4.2.3).",
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 103,
    "Text": "Sie entwerfen Testfälle auf der Grundlage des folgenden Zustandsübergangsdiagramms:",
    "Options": [
      "3",
      "2",
      "5",
      "6"
    ],
    "PostText": "Wie viele Testfälle sind mindestens erforderlich, um eine vollständige Überdeckung aller gültigen Übergänge zu erreichen? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "CorrectIndexes": [ 0 ],
    "Explanation": "Die Übergänge „ANFRAGE -> BESTÄTIGT“, „WARTELISTE -> BESTÄTIGT“ und „WARTELISTE -> END“ können nicht im selben Testfall vorkommen, was darauf hindeutet, dass mindestens drei Testfälle erforderlich sind. Tatsächlich sind nur drei Sequenzen möglich:\n\nTF1: START -> ANFRAGE (Verfügbar) -> BESTÄTIGT (Bezahlen) -> END\nTF2: START -> ANFRAGE (Nicht verfügbar) -> WARTELISTE (Verfügbar) -> BESTÄTIGT (Stornieren) -> END\nTF3: START -> ANFRAGE (Nicht verfügbar) -> WARTELISTE (Zahlen) -> END\n\nDaher ist Antwort a) korrekt.",
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf",
    "Diagram": "images/frage103_diagramm.png"
  },
  {
    "Id": 104,
    "Text": "Sie sollen einen Verzweigungstest für den folgenden Programmcode durchführen, dessen Ablauf im Kontrollflussdiagramm dargestellt ist.",
    "Options": [
      "2",
      "4",
      "8",
      "7"
    ],
    "PostText": "Wie viele Entscheidungen bzw. Zweige müssen getestet werden, um vollständige Verzweigungsüberdeckung zu erreichen? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "CorrectIndexes": [ 2 ],
    "Explanation": "Beim Zweigtest sind die Überdeckungselemente Zweige, die durch die Kanten eines Kontrollflussdiagramms dargestellt werden. Es gibt 8 Kanten im Kontrollflussdiagramm. Daher ist Antwort c) korrekt.",
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf",
    "Diagram": "images/frage104_diagramm.png"
  },
  {
    "Id": 105,
    "Text": "Wie können White-Box-Tests zur Verbesserung von Black-Box-Tests beitragen? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "White-Box-Überdeckungsanalysen helfen, die Codeabdeckung durch Black-Box-Tests zu bewerten.",
      "White-Box-Analysen ermöglichen es, nicht erreichbare Teile des Codes zu identifizieren.",
      "Zweigtests basieren auf Black-Box-Verfahren, daher deckt vollständige Zweigüberdeckung alle Black-Box-Tests ab.",
      "White-Box-Verfahren liefern direkt anwendbare Testelemente für Black-Box-Tests."
    ],
    "CorrectIndexes": [0],
    "Explanation": "Die reine Durchführung von Black-Box-Tests liefert kein Maß für die tatsächliche Codeüberdeckung. White-Box-Überdeckungsmessungen bieten eine objektive Messung der Überdeckung und liefern die notwendigen Informationen, um die Generierung zusätzlicher Tests zu ermöglichen, um diese Überdeckung zu erhöhen und anschließend das Vertrauen in den Code zu stärken (siehe CTFL-Lehrplan V4.0, Abschnitt 4.3.3).",
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 106,
    "Text": "Ein Tester verwendet beim Testen die folgende Liste möglicher Fehlerzustände:\n\n• Korrekte Eingaben werden nicht akzeptiert\n• Ungültige Eingaben werden akzeptiert\n• Falsches Ausgabeformat\n• Division durch null\n\nWelches Testverfahren wird dabei am wahrscheinlichsten eingesetzt? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Exploratives Testen",
      "Fehlerangriff",
      "Checklistenbasiertes Testen",
      "Grenzwertanalyse"
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Dies ist eine Liste möglicher Fehler. Fehlerangriffe sind ein methodischer Ansatz zur Implementierung der Fehlerschätzung und erfordern, dass der Tester eine Liste möglicher Fehler, Defekte und Ausfälle erstellt oder erfasst und Tests entwirft, die mit den Fehlern verbundene Defekte identifizieren, die Defekte aufdecken oder die Fehler verursachen Misserfolge (siehe CTFL-Lehrplan V4.0, Abschnitt 4.4.1).",
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 107,
    "Text": "Welche der folgenden Aussagen beschreibt am besten, wie der Einsatz checklistenbasiertes Testen zu höherer Testüberdeckung führen kann? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Checklistenelemente können grob definiert werden, sodass Tester daraus eigenständig detaillierte Testfälle ableiten und ausführen.",
      "Durch die Automatisierung von Checklistenpunkten wird bei jeder Testausführung automatisch eine höhere Überdeckung erzielt.",
      "Jeder Checklistenpunkt sollte einzeln getestet werden, damit verschiedene Bereiche der Software abgedeckt werden.",
      "Zwei Tester, die dieselben Checklistenpunkte nutzen, setzen sie meist unterschiedlich um – das führt zu ergänzender Überdeckung."
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Wenn es sich bei den Checklisten um ein hohes Niveau handelt, ist es wahrscheinlich, dass bei den tatsächlichen Tests eine gewisse Variabilität auftritt, was möglicherweise zu einer größeren Überdeckung, aber einer geringeren Wiederholbarkeit führt. Wenn zwei Tester einer Checkliste mit hochrangigen Elementen folgen, kann jeder von ihnen unterschiedliche Testdaten, Testschritte usw. verwenden. Auf diese Weise wird ein Tester wahrscheinlich einige Bereiche abdecken, die der andere Tester nicht abdeckt, und dies führt zu einer erhöhten Überdeckung (siehe CTFL-Lehrplan V4.0, Abschnitt 4.4.3).",
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 108,
    "Text": "Welches der folgenden Akzeptanzkriterien (Abnahmekriterien) ist das typische Beispiel für ein szenarioorientiertes Kriterium? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Die Anwendung muss es Nutzenden ermöglichen, ihr Konto sowie alle zugehörigen Daten auf Anfrage zu löschen.",
      "Wenn ein Kunde einen Artikel in den Warenkorb legt und zur Kasse geht, soll er aufgefordert werden, sich anzumelden oder ein Konto zu erstellen, sofern dies noch nicht geschehen ist.",
      "IF (contain(product(23).Name, cart.products())) THEN return FALSE.",
      "Die Website muss den Anforderungen der ICT Accessibility 508 Standards entsprechen und sicherstellen, dass alle Inhalte für Menschen mit Behinderungen zugänglich sind."
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Dieses Akzeptanzkriterium beschreibt ein Beispielszenario, das vom System realisierbar sein muss. Dies ist ein Beispiel für ein szenarioorientiertes Akzeptanzkriterium (siehe CTFL-Lehrplan V4.0, Abschnitt 4.5.2). Laut ISTQB-Lehrplan sind szenarioorientierte Akzeptanzkriterien typischerweise in einem \"Gegeben/Wenn/Dann\"-Format beschrieben und orientieren sich an der verhaltensgetriebenen Entwicklung (BDD).",
    "KLevel": 2,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 109,
    "Text": "Sie arbeiten mit abnahmetestgetriebener Entwicklung und entwerfen Testfälle auf Grundlage der folgenden User-Story:\n\nAls regulärer oder spezieller Benutzer möchte ich meine elektronische Etagenkarte nutzen können, um Zugang zu bestimmten Etagen zu erhalten.\n\nAkzeptanzkriterien:\nAC1: Reguläre Benutzer haben Zugang zu den Etagen 1 bis 3.\nAC2: Etage 4 ist ausschließlich für spezielle Benutzer zugänglich.\nAC3: Spezielle Benutzer verfügen über alle Zugriffsrechte regulärer Benutzer.\n\nWelcher Testfall eignet sich am besten, um das Akzeptanzkriterium AC3 zu testen? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Ein regulärer Benutzer erhält Zugang zu den Etagen 1 und 3.",
      "Ein regulärer Benutzer hat keinen Zugang zur Etage 4.",
      "Ein spezieller Benutzer versucht, auf Etage 5 zuzugreifen.",
      "Ein spezieller Benutzer erhält Zugang zu den Etagen 1, 2 und 3."
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Auf diese Weise können wir prüfen, ob ein spezieller Benutzer Zugriff auf Etagen hat, die für einen regulären Benutzer zugänglich sind. Die korrekte Option ist d), da dieser Testfall spezifisch die Zugriffsrechte eines speziellen Benutzers auf die regulären Etagen überprüft, wie es AC3 verlangt.",
    "KLevel": 3,
    "Topic": "Kapitel 4 - Testanalyse und Testentwurf"
  },
  {
    "Id": 110,
    "Text": "Welcher der folgenden Punkte gehört NICHT zum Zweck eines Testkonzepts? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Definition konkreter Testdaten und erwarteter Ergebnisse für Komponenten- und Integrationstests",
      "Festlegung eines Endekriteriums auf Komponententestebene mit dem Ziel 100 % Anweisungs- und Zweigüberdeckung",
      "Beschreibung der Inhalte und Struktur von Testfortschrittsberichten",
      "Begründung, warum eine in der Teststrategie vorgesehene Teststufe (z. B. Systemintegration) nicht durchgeführt wird"
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Das Testkonzept kann Testdatenanforderungen (siehe CTFL-Lehrplan V4.0, Abschnitt 5.1.1, Typische Inhalte eines Testkonzepts, 6. Aufzählungspunkt) als Teil des Testansatzes enthalten, jedoch nicht die detaillierten Testdaten für Testfälle. Testdaten sind Teil der Testfälle, nicht des Testkonzepts. Außerdem ist es in der Regel nicht möglich, solche Daten bei der Testplanerstellung zu definieren, da nicht genau bekannt ist, wie die Komponenten aussehen werden (siehe CTFL-Lehrplan V4.0, Abschnitt 5.1.1).",
    "KLevel": 1,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 111,
    "Text": "Zu Beginn jeder Iteration schätzt das Team den Arbeitsaufwand (in Personentagen), den es während dieser Iteration leisten wird.\n\nBezeichnet sei E(n) als der geschätzte und A(n) als der tatsächlich geleistete Aufwand in Iteration n.\n\nAb der dritten Iteration verwendet das Team folgendes Extrapolationsmodell zur Aufwandsschätzung:\n\n",
    "Diagram": "images/frage111_diagramm.png",
    "PostText": "Wie hoch ist der geschätzte Arbeitsaufwand für Iteration Nr. 5? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "10,5 Personentage",
      "8,25 Personentage",
      "6,5 Personentage",
      "9,4 Personentage"
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Aus der Grafik ergibt sich: A(4)=6 und A(3)=8. Aus der Formel erhalten wir: E(5) = (3*A(4) + A(3)) / 4 = (3*6+8) / 4 = 26 / 4 = 6,5 Personentage. Die Antwort c) ist korrekt, da die Schätzung von 6,5 Personentagen mit der Formel und den historischen Daten übereinstimmt (siehe CTFL-Lehrplan V4.0, Abschnitt 5.1.4).",
    "KLevel": 3,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 112,
    "Text": "Sie erstellen einen Testausführungsplan für sieben Testfälle (TC 1 bis TC 7).\n\nEine Abbildung zeigt: \n-Die Priorität jedes Testfalls (1 = höchste, 3 = niedrigste) \n- Abhängigkeiten zwischen den Testfällen in Form gerichteter Pfeile. \n\nEin Testfall darf nur ausgeführt werden, wenn alle vorgelagerten (abhängigen) Testfälle bereits ausgeführt wurden.\n",
    "Diagram": "images/frage112_diagramm.png",
    "PostText": "Welcher Testfall sollte gemäß diesen Vorgaben als sechster ausgeführt werden? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "TC 3",
      "TC 5",
      "TC 6",
      "TC 2"
    ],
    "CorrectIndexes": [ 0 ],
    "Explanation": "Unter Berücksichtigung der Prioritäten und Abhängigkeiten ergibt sich der Testausführungsplan: TC 4 – TC 7 – TC 1 – TC 2 – TC 5 – TC 3 – TC 6. Der sechste Testfall ist also TC 3 (siehe CTFL-Lehrplan V4.0, Abschnitt 5.1.5).",
    "KLevel": 3,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 113,
    "Text": "Was zeigt das Testpyramidenmodell? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Tests können unterschiedliche Prioritäten haben.",
      "Tests haben unterschiedliche Granularität.",
      "Für verschiedene Tests gelten unterschiedliche Überdeckungskriterien.",
      "Tests können voneinander abhängig sein."
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Das Testpyramidenmodell zeigt, dass Tests in unterschiedlichen Ebenen mit unterschiedlicher Granularität ausgeführt werden. Es illustriert die Granularität von Tests, z. B. von feinkörnigen Unit-Tests bis zu grobkörnigeren End-to-End-Tests (siehe CTFL-Lehrplan V4.0, Abschnitt 5.1.6).",
    "KLevel": 1,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 114,
    "Text": "Welche Beziehung besteht zwischen den Testquadranten, Teststufen und Testarten? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Testquadranten kombinieren bestimmte Teststufen mit Testarten und ordnen sie einem festen Abschnitt im Softwareentwicklungslebenszyklus zu.",
      "Testquadranten definieren die Granularität von Testarten, die auf unterschiedlichen Teststufen angewendet werden.",
      "Testquadranten ordnen jeder Teststufe eine spezifische Menge an Testarten zu.",
      "Testquadranten gruppieren Teststufen und Testarten nach Kriterien wie der Zielgruppe oder dem Testfokus."
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Die Testquadranten gruppieren Teststufen, Testarten, Aktivitäten, Testverfahren und Arbeitsprodukte in der agilen Softwareentwicklung. Tests können geschäftsorientiert oder technologieorientiert sein, und sie können das Team unterstützen oder das Produkt kritisieren. Diese Kombination bestimmt die vier Quadranten (siehe CTFL-Lehrplan V4.0, Abschnitt 5.1.7).",
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 115,
    "Text": "Wie kann eine Produktrisikoanalyse den Umfang und die Gründlichkeit von Tests beeinflussen? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Durch kontinuierliche Risikoüberwachung können neue Risiken frühzeitig erkannt werden.",
      "Die Risikoidentifikation unterstützt die Planung risikomindernder Maßnahmen.",
      "Das bewertete Risikoniveau bestimmt die erforderliche Testtiefe und -überdeckung.",
      "Die Risikoanalyse liefert die Grundlage für die Auswahl technischer Testobjekte."
    ],
    "CorrectIndexes": [ 2 ],
    "Explanation": "Die Risikoanalyse bewertet die Risiken nach Wahrscheinlichkeit und Auswirkung. Diese Bewertung hilft dabei, die Gründlichkeit und den Umfang der Tests für verschiedene Testobjekte festzulegen. Höhere Risiken erfordern gründlichere Tests (siehe CTFL-Lehrplan V4.0, Abschnitt 5.2.3).",
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 116,
    "Text": "Bei welcher der folgenden Aktivitäten im Testprozess werden Testfortschrittsberichte AM HÄUFIGSTEN verwendet? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Testentwurf",
      "Testabschluss",
      "Testanalyse",
      "Testplanung"
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Ein Testabschlussbericht wird während des Testabschlusses erstellt, wenn ein Projekt, eine Teststufe oder eine Testart abgeschlossen ist und wenn im Idealfall die Abschlusskriterien erfüllt sind. Dieser Bericht verwendet Informationen aus Testfortschrittsberichten und anderen Daten (siehe CTFL-Lehrplan V4.0, Abschnitt 5.3.2).",
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 117,
    "Text": "Welche der folgenden Aussagen stellt KEIN Beispiel dafür dar, wie das Konfigurationsmanagement das Testen unterstützt? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Alle Änderungen im Repository werden eindeutig identifiziert und versioniert.",
      "Änderungen an der Testumgebung werden dokumentiert und nachvollziehbar gemacht.",
      "Anforderungen sind in Testdokumenten eindeutig referenziert.",
      "Fehlerberichte sind mit einem Bearbeitungsstatus versehen."
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Das Zuweisen eines Status zu Fehlerzuständen ist eine Aufgabe des Fehlermanagements, nicht des Konfigurationsmanagements. Das Konfigurationsmanagement konzentriert sich auf die Kontrolle und Verfolgbarkeit von Artefakten und Änderungen (siehe CTFL-Lehrplan V4.0, Abschnitt 5.4).",
    "KLevel": 2,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 118,
    "Text": "Betrachten Sie den folgenden Fehlerbericht für eine webbasierte Einkaufsanwendung:\n\nAnwendung: WebShop v0.99\nFehler: Login-Button funktioniert nicht\nSchritte zum Reproduzieren:\nStarten Sie die Website\nKlicken Sie auf den Login-Button\nErwartetes Ergebnis: Der Benutzer wird zur Anmeldeseite weitergeleitet.\nTatsächliches Ergebnis: Die Anmeldeschaltfläche reagiert nicht.\n\nSchweregrad: Hoch\nPriorität: Dringend\n\nWelche wichtigen Informationen fehlen in diesem Bericht? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Name des Testers und Datum des Berichts.",
      "Angaben zur Testumgebung mit Versionsinformationen.",
      "Identifizierung des Testobjekts.",
      "Beschreibung der Auswirkungen für betroffene Stakeholder."
    ],
    "CorrectIndexes": [ 1 ],
    "Explanation": "Angaben zur Testumgebung (z. B. Browser, Betriebssystem, Softwareversion) sind essenziell, um Fehler zu reproduzieren und zu beheben. Ohne diese Informationen haben Entwickler Schwierigkeiten, das Problem in derselben Umgebung nachzustellen und die Ursache zu identifizieren (siehe CTFL-Lehrplan V4.0, Abschnitt 5.5).",
    "KLevel": 3,
    "Topic": "Kapitel 5 - Management der Testaktivitäten"
  },
  {
    "Id": 119,
    "Text": "Welche der folgenden Werkzeugkategorien unterstützt die Verwaltung von Testfällen, Fehlerberichten und Konfigurationsdaten? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Werkzeuge für Testdurchführung und Testüberdeckung.",
      "Werkzeuge für Testentwurf und Testrealisierung.",
      "Fehlermanagementwerkzeuge",
      "Testmanagementwerkzeuge"
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Testmanagementwerkzeuge erhöhen die Effizienz des Testprozesses, indem sie die Verwaltung von Anforderungen, Tests, Fehlern und Konfigurationen erleichtern. Sie ermöglichen u. a. die Organisation von Testfällen, die Verknüpfung und Nachverfolgung von Fehlern sowie die Versionierung von Testartefakten (siehe CTFL-Lehrplan V4.0, Abschnitt 6.1).",
    "KLevel": 2,
    "Topic": "Kapitel 6 - Testwerkzeuge"
  },
  {
    "Id": 120,
    "Text": "Welcher der folgenden Punkte ist ein typischer Vorteil der Testautomatisierung? <br><br>Wählen Sie EINE Option! (1 aus 4)",
    "Options": [
      "Automatisierte Generierung von Testfällen ohne Bezug zur Testbasis",
      "Erhöhte Überdeckung durch objektive Bewertung von Testergebnissen",
      "Längere Testlaufzeiten durch höhere Verarbeitungsleistung",
      "Reduzierung menschlicher Fehler durch konsistente und wiederholbare Testausführung"
    ],
    "CorrectIndexes": [ 3 ],
    "Explanation": "Ein entscheidender Vorteil der Testautomatisierung ist die Konsistenz und Wiederholbarkeit der Tests, die menschliche Fehler minimiert. Automatisierte Tests werden immer mit derselben Genauigkeit und in der gleichen Reihenfolge ausgeführt (siehe CTFL-Lehrplan V4.0, Abschnitt 6.2).",
    "KLevel": 1,
    "Topic": "Kapitel 6 - Testwerkzeuge"
  }
]