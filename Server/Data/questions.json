[
  {
    "Id": 1,
    "Text": "Welche der folgenden Aussagen beschreibt ein erreichbares Testziel?",
    "Options": [
      "Es lässt sich nachweisen, dass das zu prüfende System keine Fehlerzustände mehr hat.",
      "Es lässt sich nachweisen, dass es nach der produktiven Inbetriebnahme des Systems keine Fehlerwirkungen geben wird.",
      "Die Risikostufe des Testobjekts ist verringert und Vertrauen in das Qualitätsniveau ist aufgebaut.",
      "Durch eine Überprüfung lässt sich feststellen, dass alle Kombinationen von Eingabewerten getestet wurden."
    ],
    "CorrectIndex": 2,
    "Explanation": "Durch das Testen werden Fehler aufgedeckt, was das Risiko verringert und gleichzeitig mehr Vertrauen in die Qualität des Testobjekts schafft (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.1.1, 4. + 8. Aufzählungspunkt)."
  },
  {
    "Id": 2,
    "Text": "Was ist der Hauptunterschied zwischen Testen und Debuggen?",
    "Options": [
      "Testen ist der Prozess der Fehlersuche, während Debugging der Prozess der Fehlerbehebung ist.",
      "Beim Testen werden Anforderungen überprüft, während beim Debugging der Entwurf überprüft wird.",
      "Testen ist der Prozess des Ausführens von Software, während das Debugging der Prozess der Analyse der Software ist.",
      "Testen ist der Prozess der Fehlervermeidung, während das Debugging der Prozess der Fehlerbeseitigung ist."
    ],
    "CorrectIndex": 0,
    "Explanation": "Unter Debugging versteht man das Auffinden, Analysieren und Beseitigen der Ursachen von Fehlern in einer Komponente oder einem System u. a. nach einem dynamischen Test zwecks Fehlersuche (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.1.2)."
  },
  {
    "Id": 3,
    "Text": "Sie sind Mitglied eines Teams, das ein neues System testet. Ihnen ist aufgefallen, dass seit mehreren Iterationen keine Änderungen an den bestehenden Regressionstestfällen vorgenommen und keine neuen Fehler durch einen Regressionstest aufgedeckt wurden. Ihr Vorgesetzter ist zufrieden, aber Sie sind es nicht.<br><br>Welcher Grundsatz des Testens erklärt Ihre Skepsis in dieser Situation AM BESTEN?",
    "Options": [
      "Alte Tests verlieren an Wirksamkeit.",
      "Trugschluss: “Keine Fehler” bedeuten ein brauchbares System.",
      "Häufung von Fehlerzuständen.",
      "Vollständiges Testen ist nicht möglich."
    ],
    "CorrectIndex": 0,
    "Explanation": "Dieser Grundsatz besagt, dass, wenn dieselben Tests immer und immer wieder wiederholt werden, diese Tests irgendwann keine neuen Fehler mehr finden. Das ist wahrscheinlich der Grund, warum die Tests auch in dieser Version alle bestanden wurden (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.3, Punkt 5)."
  },
  {
    "Id": 4,
    "Text": "Sie arbeiten in einem Team, das eine mobile Anwendung für Essensbestellungen entwickelt. In der aktuellen Iteration hat das Team beschlossen, die Zahlungsfunktionalität zu implementieren.<br><br>Welche der folgenden Aktivitäten gehören zur Testanalyse?",
    "Options": [
      "Die Aufwandsschätzung für den Test der Integration der mobilen Anwendung mit dem Zahlungsdienst durchführen.",
      "Die Entscheidung, ob getestet wird, inwieweit Zahlungen zwischen mehreren Nutzern aufgeteilt werden können.",
      "Mittels Grenzwertanalyse werden die Testdaten für die Testfälle abgeleitet, die die korrekte Zahlungsabwicklung für den zulässigen minimalen Betrag überprüfen.",
      "Die Abweichung zwischen dem tatsächlichen und dem erwarteten Ergebnis nach der Ausführung eines Testfalls analysieren."
    ],
    "CorrectIndex": 1,
    "Explanation": "Dies ist ein Beispiel für die Definition von Testbedingungen, die ein Teil der Testanalyse sind (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.4.1, Anteil Testanalyse)."
  },
  {
    "Id": 5,
    "Text": "Welche der folgenden Aussagen beschreibt AM BESTEN, wie ein Mehrwert durch Etablierung und Aufrechterhaltung der Verfolgbarkeit zwischen Testbasis und den Testmitteln erzielt wird?",
    "Options": [
      "Wartungstests können basierend auf Änderungen der ursprünglichen Anforderungen vollständig automatisiert werden.",
      "Es kann effizienter bestimmt werden, ob die angestrebte Überdeckung auch tatsächlich erreicht wurde.",
      "Die Testmanagementrolle kann feststellen, welche Tester die Fehler mit dem höchsten Schweregrad gefunden haben.",
      "Codebereiche, die möglicherweise durch Seiteneffekte einer Änderung beeinflusst werden, können durch Regressionstests gezielt überprüft werden."
    ],
    "CorrectIndex": 1,
    "Explanation": "Wenn die Testfälle mit den Anforderungen verknüpft sind, kann bei Hinzufügen eines neuen Testfalls (mit Verfolgbarkeit) festgestellt werden, ob zuvor nicht überdeckte Anforderungen bzw. Anforderungsteile durch den neuen Testfall überdeckt werden (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.4.4, 1. Aufzählungspunkt)."
  },
  {
    "Id": 6,
    "Text": "Welche der folgenden Aussagen vergleicht AM BESTEN die verschiedenen Rollen beim Testen?",
    "Options": [
      "Die Rolle des Testens führt Testfälle aus, die Testmanagementrolle plant und überwacht die Testaktivitäten und meldet die Abweichungen an alle Tester.",
      "Die Rolle des Testens führt die Aktivitäten der Testanalyse sowie des Testentwurfs aus und erstellt und führt Testfälle aus, die Testmanagementrolle koordiniert die Testressourcen und berichtet an die Stakeholder.",
      "Die Rolle des Testens entscheidet über die zu automatisierenden Tests und priorisiert Testfälle, die Testmanagementrolle analysiert Risiken und setzt Prioritäten für die Tests.",
      "Die Rolle des Testens führt statische und dynamische Komponententests durch, die Testmanagementrolle führt Systemtests und Abnahmetests durch."
    ],
    "CorrectIndex": 1,
    "Explanation": "Diese Option beschreibt sinngemäß die Hauptaufgaben der einzelnen Rollen beim Testen. Die Rolle des Testens entwirft, erstellt und führt Testfälle aus und sie führt die Aktivitäten der Testanalyse und des Testentwurfs aus und meldet Fehler; die Rolle des Testmanagements koordiniert die Testressourcen und erstattet den Beteiligten Bericht (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.4.5, 2. + 3. Absatz)."
  },
  {
    "Id": 7,
    "Text": "Welche der folgenden Aussagen erklärt AM BESTEN einen Vorteil der Unabhängigkeit des Testens?",
    "Options": [
      "Der Einsatz eines unabhängigen Testteams ermöglicht es der Projektleitung, dem Testteam die Verantwortung für die Qualität des Endprodukts zu übertragen.",
      "Wenn man sich ein externes Testteam leisten kann, dann hat das den Vorteil, dass dieses externe Team nicht so leicht von den Bedenken des Projektmanagements und der Notwendigkeit, strikte Liefertermine einzuhalten, beeinflusst werden kann.",
      "Ein unabhängiges Testteam kann getrennt von den Entwicklern arbeiten, muss nicht durch Änderungen der Projektanforderungen abgelenkt werden und kann die Kommunikation mit den Entwicklern auf die Fehlerberichterstattung über das Fehlermanagementsystem beschränken.",
      "Wenn Spezifikationen Mehrdeutigkeiten und Ungereimtheiten enthalten, treffen Entwickler Annahmen über ihre Interpretation, und ein unabhängiges Testteam kann nützlich sein, um diese Annahmen und die Interpretation der Entwickler zu hinterfragen."
    ],
    "CorrectIndex": 3,
    "Explanation": "Spezifikationen sind nie perfekt, was bedeutet, dass der Entwickler Annahmen treffen muss. Ein unabhängiges Testteam ist insofern nützlich, als es die Annahmen und die anschließende Interpretation der Entwickler hinterfragen und überprüfen kann (vgl. CTFL- Lehrplan V4.0, Abschnitt 1.5.3, 3. Absatz, letzter Satz)."
  },
  {
    "Id": 8,
    "Text": "Wie zeigt sich der Whole-Team-Ansatz in der Interaktion zwischen Testern und Fachbereichsvertretern?",
    "Options": [
      "Fachbereichsvertreter entscheiden gemeinsam mit der Projektleitung über die Ansätze zur Testautomatisierung.",
      "Tester helfen Fachbereichsvertretern bei der Festlegung der Teststrategie.",
      "Die Beteiligung von Fachbereichsvertretern ist nicht Teil des Whole-Team-Ansatzes.",
      "Tester helfen Fachbereichsvertretern bei der Erstellung geeigneter Abnahmetests."
    ],
    "CorrectIndex": 3,
    "Explanation": "Die Tester arbeiten eng mit Fachbereichsvertretern zusammen, um sicherzustellen, dass die gewünschten Qualitätsniveaus erreicht werden. Dazu gehört auch die Unterstützung und Zusammenarbeit mit ihnen, um ihnen bei der Erstellung geeigneter Abnahmetests zu helfen (vgl. CTFL-Lehrplan V4.0, Abschnitt 1.5.2, 3. Absatz)."
  },
  {
    "Id": 9,
    "Text": "Welche der folgenden Aussagen beschreibt AM BESTEN eine gute Praktik für das Testen, die für alle Softwareentwicklungslebenszyklen gilt?",
    "Options": [
      "Testen sollte erst nach Abschluss der Entwicklung durchgeführt werden.",
      "Testen sollte unter Federführung der Entwicklung durchgeführt werden.",
      "Testen sollte frühzeitig im Entwicklungsprozess beginnen.",
      "Testen sollte in einer Entwicklungstestumgebung durchgeführt werden."
    ],
    "CorrectIndex": 2,
    "Explanation": "Testen sollte frühzeitig im Entwicklungsprozess beginnen, um Fehler so früh wie möglich zu erkennen und die Kosten für die Fehlerbehebung zu minimieren (vgl. auch: CTFL-Lehrplan V4.0, Abschnitt 2.1.2, 3. Aufzählungspunkt und Abschnitt 1.3)."
  },
  {
    "Id": 10,
    "Text": "Welche der folgenden Aussagen beschreibt AM BESTEN den Ansatz der abnahmetestgetriebenen Entwicklung (ATDD)?",
    "Options": [
      "In der ATDD werden Akzeptanzkriterien typischerweise basierend auf dem Format GIVEN/WHEN/THEN erstellt.",
      "Bei ATDD werden zunächst die Testfälle entwickelt und dann die Software inkrementell gegen die Testfälle und definierten Akzeptanzkriterien implementiert.",
      "Bei ATDD werden Tests aus Akzeptanzkriterien als Teil des Systementwurfs abgeleitet.",
      "Bei ATDD basieren die Tests auf dem gewünschten Verhalten der Software, was es für die Teammitglieder einfacher macht, die Tests und die definierten Akzeptanzkriterien zu verstehen."
    ],
    "CorrectIndex": 2,
    "Explanation": "Bei der abnahmetestgetriebenen Entwicklung (ATDD) werden Tests anhand von Akzeptanzkriterien als Teil des Systementwurfs abgeleitet und erstellt (vgl. CTFL-Lehrplan V4.0, Abschnitt 2.1.3, 2. aufgelisteter Ansatz, 1. Aufzählungspunkt)."
  },
  {
    "Id": 11,
    "Text": "Welche der folgenden Aussagen ist KEIN Beispiel für den Shift-Left-Ansatz?",
    "Options": [
      "Benutzeranforderungen werden überprüft, bevor sie von den Stakeholdern formell akzeptiert werden.",
      "Komponententestfälle werden erstellt, bevor der zugehörige Code programmiert wird.",
      "Der Performanztest einer Komponente wird während des Komponententests ausgeführt.",
      "Nicht-funktionale Tests werden, wenn möglich, beginnend auf der Ebene der Systemtests ausgeführt."
    ],
    "CorrectIndex": 3,
    "Explanation": "Frühe nicht-funktionale Tests sind zwar ein Beispiel für den Shift-Left-Ansatz, aber NICHT erst auf der Ebene der Systemtests. Erfolgen sie so spät, ist dies KEIN Beispiel für den Shift-Left-Ansatz (vgl. CTFL-Lehrplan V4.0, Abschnitt 2.1.5, 5. Aufzählungspunkt)."
  },
  {
    "Id": 12,
    "Text": "Welches der folgenden Argumente ist AM BESTEN geeignet, um Ihren Vorgesetzten davon zu überzeugen, am Ende eines jeden Releasezyklus eine Retrospektive durchzuführen?",
    "Options": [
      "Retrospektiven sind heutzutage sehr beliebt und unsere Kunden würden es zu schätzen wissen, wenn wir sie in unsere Prozesse aufnehmen würden.",
      "Die regelmäßige Durchführung von Retrospektiven spart dem Unternehmen Geld, da die Vertreter der Endnutzer kein unmittelbares Feedback über das Produkt geben.",
      "Die bei der Retrospektive festgestellten Prozessschwächen können während der Retrospektive analysiert werden und als Aufgabenliste für das Programm zur kontinuierlichen Prozessverbesserung des Unternehmens dienen.",
      "Retrospektiven ermöglichen es dem Team, sich gegenseitig zu loben und zu motivieren, was die Arbeitsmoral und die Produktivität erhöhen."
    ],
    "CorrectIndex": 2,
    "Explanation": "Regelmäßig durchgeführte Retrospektiven mit entsprechenden Folgeaktivitäten sind entscheidend für die kontinuierliche Verbesserung von Entwicklung und Test (vgl. CTFL-Lehrplan V4.0, Abschnitt 2.1.6, 2. Absatz, 2. Satz)."
  },
  {
    "Id": 13,
    "Text": "Welche Arten von Fehlerzuständen (1-4) werden in welchen Teststufen (A-D) AM EHESTEN gefunden?<br><br>1. Fehlerzustände, wenn das Systemverhalten von den geschäftlichen Anforderungen abweicht<br>2. Fehlerzustände in der Kommunikation zwischen Komponenten<br>3. Fehlerzustände in einer isolierten Komponente<br>4. Fehlerzustände in einer nicht korrekt implementierten User-Story<br><br>A. Komponententest<br>B. Komponentenintegrationstest<br>C. Systemtest<br>D. Abnahmetests<br>",
    "Options": [
      "1D, 2B, 3A, 4C",
      "1D, 2B, 3C, 4A",
      "1B, 2A, 3D, 4C",
      "1C, 2A, 3B, 4D"
    ],
    "CorrectIndex": 0,
    "Explanation": "Die Testgrundlage für Abnahmetests sind die Geschäftsanforderungen des Benutzers (1D)<br><br>Die Kommunikation zwischen den Komponenten wird beim Komponentenintegrationstest der Komponenten getestet (2B)<br><br>Fehler in einer isolierten Komponente können beim Komponententest (3A) festgestellt werden, da dieser Test die interne Struktur und Funktionalität einer einzelnen Komponente überprüft"
  },
  {
    "Id": 14,
    "Text": "Die Teststrategie Ihres Unternehmens sieht vor, dass die Datenmigration zum Nachfolgesystem getestet werden muss, sobald ein System außer Betrieb genommen wird. <br><br>Mit welcher Testaktivität wird diese Anforderung am ehesten erfüllt?",
    "Options": [
      "Wartungstest",
      "Regressionstest",
      "Komponententest",
      "Komponentenintegrationstest"
    ],
    "CorrectIndex": 0,
    "Explanation": "Wenn ein System außer Betrieb genommen wird, kann es erforderlich sein, die Datenmigration zu testen, was eine Art von Wartungstest ist. Das ist eine Art von Test, der durchgeführt wird, wenn ein System außer Betrieb genommen oder geändert wird, um sicherzustellen, dass die Funktionalität und Leistung erhalten bleiben. Die Notwendigkeit einer Datenmigration fällt unter Migration. Der Wechsel zum Nachfolgesystem fällt unter Ablösung des Systems, beides sind Auslöser für Wartungstests (vgl. CTFL-Lehrplan V4.0, Abschnitt 2.3, 3. Absatz, 2. + 3. Aufzählungspunkt)."
  },
  {
    "Id": 15,
    "Text": "Welche der folgenden Optionen ist KEIN Vorteil des statischen Testens?",
    "Options": [
      "Die Bewertung und Behebung der durch eine statische Analyse aufgedeckten Anomalien kann erheblichen Zeit- und Ressourcenaufwand erfordern.",
      "Die Behebung von Fehlerzuständen, die bei statischen Tests gefunden werden, ist in der Regel wesentlich kostengünstiger als die Behebung von Fehlern, die bei dynamischen Tests gefunden werden.",
      "Das Finden von Programmierfehlern, die bei dynamischen Tests möglicherweise nicht gefunden werden.",
      "Das Aufdecken von Lücken und Unstimmigkeiten in den Anforderungen."
    ],
    "CorrectIndex": 0,
    "Explanation": "„Die (manuelle) Bewertung und Behebung der durch eine statische Analyse aufgedeckten Anomalien kann erheblichen Zeit- und Ressourcenaufwand erfordern.“ Das ist ein möglicher Nachteil des statischen Testens, insbesondere wenn das Testobjekt sehr komplex und umfangreich ist (vgl. CTFL-Lehrplan V4.0, Abschnitt 3.1.2, letzter Absatz)."
  },
  {
    "Id": 16,
    "Text": "Welcher der folgenden Punkte ist ein Vorteil von frühem und häufigem Feedback durch Stakeholder?",
    "Options": [
      "Es verbessert den Testprozess für zukünftige Projekte.",
      "Es zwingt die Kunden dazu, ihre Anforderungen basierend auf den abgestimmten Risiken zu priorisieren.",
      "Nur so lässt sich die Qualität der Änderungen im Prozess messen.",
      "Es hilft, Missverständnisse bei den Anforderungen zu vermeiden."
    ],
    "CorrectIndex": 3,
    "Explanation": "Frühes und häufiges Feedback ermöglicht die frühzeitige Aufdeckung potenzieller Qualitätsprobleme wie missverstandener Anforderungen (vgl. CTFL- Lehrplan V4.0, Abschnitt 3.2.1, 1. Absatz)."
  },
  {
    "Id": 17,
    "Text": "Die in Ihrem Unternehmen durchgeführten Reviews weisen die folgenden Eigenschaften auf:<br><br>• Der Hauptzweck ist die Kommunikation oder die Schulung der Gutachter.\n• Die Sitzung wird vom Autor des Arbeitsergebnisses geleitet.\n• Es gibt eine individuelle Vorbereitung der Reviewer (Gutachter).\n• Ein Reviewbericht kann erstellt werden.<br><br>Welche der folgenden Arten eines Reviews wird am ehesten verwendet?",
    "Options": [
      "Informelles Review",
      "Walkthrough",
      "Technisches Review",
      "Inspektion"
    ],
    "CorrectIndex": 1,
    "Explanation": "Der Hauptzweck ist die Kommunikation und die Schulung der Gutachter als wichtiges Ziel eines Walkthrough<br><br>Das Review-Meeting wird vom Autor des Arbeitsprodukts geleitet – dies ist bei Inspektionen nicht erlaubt und wird bei technischen Reviews nur in Ausnahmefällen durchgeführt. Ein Moderator wird bei Walkthroughs benötigt und ist bei informellen Reviews erlaubt<br><br>Einzelne Reviewer (Gutachter) finden mögliche Anomalien während der Vorbereitung – alle Arten von Reviews können eine individuelle Vorbereitung der Reviewer einbeziehen<br><br>Es wird ein Reviewbericht erstellt – alle Arten von Reviews können einen Reviewbericht erstellen, obwohl informelle Reviews keine Dokumentation erfordern"
  },
  {
    "Id": 18,
    "Text": "Welche der folgenden Aussagen ist KEIN Faktor, der zu einem erfolgreichen Review beiträgt?",
    "Options": [
      "Die Teilnehmer sollten sich ausreichend Zeit für das Review nehmen.",
      "Eine Aufteilung großer Arbeitsprodukte in kleine Teile wird empfohlen, damit die Reviewer (Gutachter) nicht die Konzentration verlieren.",
      "Klare Ziele und messbare Endekriterien werden für das Review festgelegt.",
      "Das Management wirkt persönlich mit bei der Kommunikation der Befunde."
    ],
    "CorrectIndex": 3,
    "Explanation": "Das Management ist verantwortlich für das Budget und für die Unterstützung des Reviewprozesses, sollte aber nicht persönlich bei der Kommunikation der Befunde beteiligt werden (vgl. CTFL-Lehrplan V4.0, Abschnitt 3.2.5, 6. Aufzählungspunkt und Abschnitt 3.2.3, 1. Aufzählungspunkt)."
  },
  {
    "Id": 19,
    "Text": "Welcher der folgenden Punkte ist ein Merkmal erfahrungsbasierter Testverfahren?",
    "Options": [
      "Testfälle werden auf der Grundlage detaillierter Entwurfsinformationen erstellt.",
      "Zur Messung des Überdeckungsgrads werden die Anzahl der im Test geprüften Schnittstellen verwendet.",
      "Die Verfahren beruhen in hohem Maße auf den Kenntnissen des Testers über die Software und die Geschäftsdomäne.",
      "Die Testfälle werden verwendet, um Abweichungen von den Anforderungen zu identifizieren."
    ],
    "CorrectIndex": 2,
    "Explanation": "Dies ist ein gemeinsames Merkmal der erfahrungsbasierten Testverfahren. Dieses Wissen und diese Erfahrung, einschließlich der erwarteten Nutzung der Software, ihrer Umgebung, der wahrscheinlichen Fehler und der Verteilung dieser Fehler, wird zur Definition von Tests verwendet (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.1)."
  },
  {
    "Id": 20,
    "Text": "Sie testen die Software für eine unbeaufsichtigte amerikanische Zapfsäule. Nachdem die Zapfpistole abgehoben und die gewünschte Kraftstoffsorte ausgewählt wurde, gibt der Kunde die gewünschte Kraftstoffmenge in Gallonen über ein Tastenfeld ein. Das Tastenfeld erlaubt nur die Eingabe von Ziffern. Pro Zapfvorgang kann zwischen 0,1 und 50,0 Gallonen getankt werden.<br><br>Welche der folgenden Antworten repräsentiert eine minimale Menge von Eingabewerten, die alle gültigen und ungültigen Äquivalenzklassen für die Kraftstoffmenge überdeckt?",
    "Options": [
      "0,0; 20,0; 60,0",
      "0,0; 0,1; 50,0",
      "0,0; 0,1; 50,0; 70,0",
      "-0,1; 0,0; 0,1; 49,9; 50,0; 50,1"
    ],
    "CorrectIndex": 0,
    "Explanation": "Diese Liste von Eingabewerten definiert genau einen Testfall pro Äquivalenzklasse (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.2.1, 5. Absatz)."
  },
  {
    "Id": 21,
    "Text": "Sie testen ein E-Commerce-System, das Lebensmittel wie Gewürze, Mehl und andere Artikel in großen Mengen verkauft. Die Einheiten, in denen die Artikel verkauft werden, sind entweder Gramm oder Kilogramm. Unabhängig von den Einheiten ist die kleinste gültige Bestellmenge 0,5 Einheiten (z. B. ein halbes Gramm Kardamomkapseln) und die größte gültige Bestellmenge 25,0 Einheiten (z. B. 25 Kilogramm Zucker). Die Genauigkeit der Bestellmenge beträgt 0,1 Einheiten.<br><br>Welche der folgenden Eingabewerte decken nur die Grenzwerte mit der 2-Wert-Grenzwertanalyse für die Bestellmenge ab?",
    "Options": [
      "0,3; 24,9; 25,2",
      "0,4; 0,5; 0,6; 24,9;25,0; 25,1",
      "0,4; 0,5; 25,0; 25,1",
      "0,5; 0,6; 24,9; 25,0"
    ],
    "CorrectIndex": 2,
    "Explanation": "Diese Menge an Eingabewerten deckt die vier Grenzwerte ab, die durch Anwendung der 2-Wert-Methode selektiert werden (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.2.2, 4. Absatz)."
  },
  {
    "Id": 22,
    "Text": "Neu eingestellte Mitarbeitende einer Firma können individuelle Ziele mit ihren Vorgesetzten vereinbaren, an deren Erreichung die Auszahlung einer Prämie gekoppelt ist. Diese Prämie wird ihnen aber erst ausgezahlt, wenn sie länger als ein Jahr im Unternehmen beschäftigt sind.<br><br>Dieser Sachverhalt lässt sich in einer Entscheidungstabelle darstellen:",
    "Diagram": "images/frage22_diagramm.png",
    "PostText": "Welcher der folgenden Testfälle beschreibt eine in der Praxis gültige, durchführbare Situation und fehlt in der oben aufgeführten Entscheidungstabelle?",
    "Options": [
      "Bedingung1 = „J“, Bedingung2 = „N“, Bedingung3 = „J“, Aktion = „N“",
      "Bedingung1 = „J“, Bedingung2 = „J“, Bedingung3 = „N“, Aktion = „J“",
      "Bedingung1 = „N“, Bedingung2 = „N“, Bedingung3 = „J“, Aktion = „N“",
      "Bedingung1 = „J“, Bedingung2 = „J“, Bedingung3 = „N“, Aktion = „N“"
    ],
    "CorrectIndex": 3,
    "Explanation": "Der Testfall beschreibt die fachlich korrekte Situation (Gegenstück zu Antwort b), dass das Nichterreichen des vereinbarten Ziels zur Nichtauszahlung der Prämie führt, wenn der Mitarbeiter länger als ein Jahr beschäftigt ist. Diese Situation kann in der Praxis vorkommen, fehlt aber in der Entscheidungstabelle (vgl. CTFL- Lehrplan V4.0, Abschnitt 4.2.3, 2. Absatz)."
  },
  {
    "Id": 23,
    "Text": "Welche der folgenden Aussagen zum Zustandsübergangsdiagramm und der dargestellten Tabelle von Testfällen ist WAHR?",
    "Diagram": "images/frage23_diagramm.png",
    "Table": [
      { "Testfall": "Startzustand", "1": "S1", "2": "S2", "3": "S2", "4": "S3", "5": "S3" },
      { "": "Eingabe", "1": "Power On", "2": "Power Off", "3": "RC On", "4": "RC Off", "5": "Power Off" },
      { "": "Endzustand", "1": "S2", "2": "S1", "3": "S3", "4": "S2", "5": "S1" }
    ],
    "Options": [
      "Die Testfälle führen alle Übergänge im Zustandsübergangsdiagramm aus, damit wird 100% Überdeckung aller Übergänge erreicht.",
      "Die Testfälle führen alle gültigen Übergänge im Zustandsübergangsdiagramm aus. Damit wird 100% 0-Switch-Überdeckung erreicht.",
      "Die Testfälle führen nur einige der gültigen Übergänge im Zustandsübergangsdiagramm aus. Damit liegt die 0-Switch-Überdeckung unter 100%.",
      "Testfall 2 ist für 100% 0-Switch-Überdeckung nicht erforderlich, da Zustand S1 bereits durch Testfall 5 überdeckt wurde."
    ],
    "CorrectIndex": 1,
    "Explanation": "Da alle 5 gültigen Übergänge ausgeführt werden."
  },
  {
    "Id": 24,
    "Text": "Welche der folgenden Aussagen ist eine Beschreibung für eine Anweisungsüberdeckung?",
    "Options": [
      "Es handelt sich um eine Metrik zur Berechnung und Messung des prozentualen Anteils der ausgeführten Testfälle.",
      "Es handelt sich um eine Metrik, die den prozentualen Anteil, der bereits durch Testfälle ausgeführten Anweisungen im Code angibt.",
      "Es handelt sich um eine Metrik zur Messung der Anzahl der durch Testfälle ausgeführten Anweisungen im Code, die keine Fehlerwirkung aufgedeckt haben.",
      "Es handelt sich um eine Metrik, die eine Wahr/Falsch-Bestätigung gibt, ob alle Anweisungen durch ausgeführte Testfälle abgedeckt sind."
    ],
    "CorrectIndex": 1,
    "Explanation": "Der Anweisungstest hat zum Ziel, durch Testfälle die Anweisungen im Code auszuführen, bis eine akzeptable Anweisungsüberdeckung erreicht ist. Die Anweisungsüberdeckung wird als die Anzahl der von den durch Testfälle ausgeführten Anweisungen gemessen, geteilt durch die Gesamtzahl der ausführbaren Anweisungen im Testobjekt, ausgedrückt in Prozent (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.3.1, 1. Absatz)."
  },
  {
    "Id": 25,
    "Text": "Welche der folgenden Aussagen trifft NICHT auf White-Box-Tests zu?",
    "Options": [
      "White-Box-Test ist ein Test, der auf der Analyse der internen Struktur einer Komponente oder eines Systems basiert.",
      "White-Box-Überdeckungsmetriken können helfen, zusätzliche Tests zu identifizieren, um die Codeüberdeckung zu erhöhen.",
      "White-Box-Testverfahren können ergänzend zu den Black-Box-Testverfahren eingesetzt werden, um das Vertrauen in den Code zu stärken.",
      "White-Box-Tests können helfen, nicht implementierte Anforderungen zu identifizieren."
    ],
    "CorrectIndex": 3,
    "Explanation": "Dies ist die Schwäche der White-Box-Testverfahren. Sie sind nicht in der Lage, die fehlende Implementierung zu identifizieren, da sie nur auf der Struktur des Testobjekts und nicht auf der Anforderungsspezifikation beruhen (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.3.3, 1. Absatz, letzter Satz)."
  },
  {
    "Id": 26,
    "Text": "Welche der folgenden Aussagen beschreibt AM BESTEN das Konzept der intuitiven Testfallermittlung?",
    "Options": [
      "Bei der intuitiven Testfallermittlung nutzen Sie Ihr Wissen über und Ihre Erfahrung mit in der Vergangenheit gefundenen Fehlerzuständen und -wirkungen und typischen Fehlhandlungen von Entwicklern.",
      "Bei der intuitiven Testfallermittlung werden Ihre persönlichen Erfahrungen mit der Entwicklung und den Fehlhandlungen, die Sie als Entwickler gemacht haben, genutzt.",
      "Bei der intuitiven Testfallermittlung müssen Sie sich vorstellen, dass Sie der Benutzer des Testobjekts sind und Fehlerwirkungen erraten, die der Benutzer bei der Interaktion mit dem Testobjekt machen könnte.",
      "Bei der intuitiven Testfallermittlung müssen Sie die Entwicklungsaufgabe schnell selbst durchführen, um die Fehlerzustände und -wirkungen zu erkennen, die ein Entwickler machen könnte."
    ],
    "CorrectIndex": 0,
    "Explanation": "Das Grundkonzept der intuitiven Testfallermittlung (engl. Error Guessing) besteht darin, dass der Tester versucht zu erraten, welche Fehlhandlungen ein Entwickler gemacht haben könnte, und welche Fehlerzustände im Testobjekt vorhanden sein könnten, basierend auf früheren Erfahrungen. Diese Methode beruht auf der Annahme, dass Fehler sich wiederholen oder ähnlich sind. Sie können Ihre Testfälle so gestalten, dass sie diese potenziellen Fehler aufdecken (vgl. CTFL-Lehrplan V4.0; Abschnitt 4.4.1, 1. Absatz)."
  },
  {
    "Id": 27,
    "Text": "In Ihrem Projekt hat sich die Freigabe einer brandneuen Anwendung verzögert und die Testdurchführung hat spät begonnen, aber Sie verfügen über sehr detailliertes Fachwissen und gute analytische Fähigkeiten. Die vollständige Anforderungsspezifikation wurde noch nicht an Sie weitergegeben und die Geschäftsleitung bittet um die Vorlage erster Testergebnisse.<br><br>Welches Testverfahren ist in dieser Situation AM BESTEN geeignet?",
    "Options": [
      "Checklistenbasiertes Testen",
      "Intuitive Testfallermittlung",
      "Exploratives Testen",
      "Anweisungstest"
    ],
    "CorrectIndex": 2,
    "Explanation": "Exploratives Testen ist vor allem dann sinnvoll, wenn nur wenige Spezifikationen bekannt sind und/oder der Zeitplan für die Tests eng gesteckt ist (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.4.2, 3. Absatz, 1. Satz)."
  },
  {
    "Id": 28,
    "Text": "Welche der folgenden Aktivitäten beschreibt AM BESTEN die Art und Weise, wie Akzeptanzkriterien für eine User-Story formuliert werden können?",
    "Options": [
      "Durchführung von Retrospektiven zur Ermittlung der tatsächlichen Bedürfnisse der Stakeholder in Bezug auf eine bestimmte User-Story.",
      "Verwendung des Formats GIVEN/WHEN/THEN zur Beschreibung einer beispielhaften Testbedingung im Zusammenhang mit einer bestimmten User-Story.",
      "Mündliche Kommunikation, um das Risiko zu verringern, dass die Akzeptanzkriterien von anderen missverstanden werden.",
      "Dokumentieren von Risiken im Zusammenhang mit einer bestimmten User-Story in einem Testkonzept, um das risikobasierte Testen dieser User-Story zu erleichtern."
    ],
    "CorrectIndex": 1,
    "Explanation": "Dies ist eine Standardmethode zur Dokumentation von Akzeptanzkriterien für eine User-Story (vgl. CTFL-Lehrplan V4.0, Abschnitt 4.5.2, 3. Absatz, 1. Aufzählungspunkt)."
  },
  {
    "Id": 29,
    "Text": "Ihr Team verfolgt den Ansatz der abnahmetestgetriebenen Entwicklung (ATDD) und analysiert die folgende User-Story, um Testfälle zu erstellen.<br><br> Als registrierter Kunde möchte ich meine bisherigen Bestellungen auf der Website des Unternehmens einsehen können, um einen Überblick über meine Einkäufe zu behalten.<br><br>Ihr Team ermittelt die folgende Liste von Testfällen. Welcher der Testfälle ist für diese User-Story NICHT relevant?",
    "Options": [
      "Eingabe: Der Kunde loggt sich in sein Konto auf der Website ein und klickt auf die Schaltfläche \"Bestellhistorie anzeigen\". Erwartete Ausgabe: Das System zeigt eine Liste aller früheren Bestellungen des Kunden an, einschließlich Datum, Bestellnummer und Gesamtkosten.",
      "Eingabe: Der eingeloggte Kunde klickt in der Liste seiner Bestellungen auf eine Bestellung. Erwartete Ausgabe: Das System zeigt die einzelnen gekauften Artikel mit Preis und Menge an.",
      "Eingabe: Der eingeloggte Kunde klickt auf die Schaltfläche \"Aufsteigend sortieren\" auf dem Bildschirm mit der Bestellhistorie. Erwartete Ausgabe: Das System zeigt die Bestellhistorie aufsteigend sortiert nach Bestellnummer an.",
      "Eingabe: Ein neu registrierter Kunde loggt sich ein und gibt eine erste Bestellung ein. Erwartete Ausgabe: Das System akzeptiert die Bestellung und legt die zugehörigen Daten ab."
    ],
    "CorrectIndex": 3,
    "Explanation": "Der Testfall hat KEINE Relevanz für die User-Story, denn ein neu registrierter Kunde hat keine Bestellhistorie. Der Testfall kann zwar für ein Online-Bestellsystem grundsätzlich relevant sein, aber nicht für diese User-Story (vgl. CTFL- Lehrplan V4.0, Abschnitt 4.5.3)."
  },
  {
    "Id": 30,
    "Text": "Wie schaffen Tester einen Mehrwert für die Iterationsplanung?",
    "Options": [
      "Die Tester bestimmen die Priorität der zu entwickelnden User-Storys.",
      "Die Tester konzentrieren sich nur auf die Verfeinerung der funktionalen Aspekte des zu prüfenden Systems.",
      "Die Tester beteiligen sich an der Risikoanalyse und bestimmen die Testbarkeit von User-Storys.",
      "Die Tester ermöglichen die Freigabe qualitativ hochwertiger Software durch frühzeitigen Testentwurf während der Releaseplanung."
    ],
    "CorrectIndex": 2,
    "Explanation": "Laut dem Lehrplan ist dies eine der Möglichkeiten, wie Tester einen Mehrwert für die Iterationsplanung schaffen (vgl. CTFL-Lehrplan V4.0, Abschnitt 5.1.2, 3. Absatz, 2. Satz)."
  },
  {
    "Id": 31,
    "Text": "Welche der folgenden Optionen sind Endekriterien für den Test eines Systems?",
    "Options": [
      "Testumgebung ist einsatzbereit.",
      "Anmeldung am Testobjekt durch den Tester ist möglich.",
      "Erwartete Fehlerdichte ist erreicht und Fehlerzustände sind berichtet worden.",
      "Anforderungen sind in das Format GIVEN/WHEN/THEN übersetzt worden."
    ],
    "CorrectIndex": 2,
    "Explanation": "Die erwartete Fehlerdichte ist ein Maß für die Sorgfalt; daher gehört sie zu den Endekriterien. Das vollständige Berichten aller im Test aufgedeckten Fehler ist ebenfalls ein Abschlusskriterium und gehört daher ebenfalls zu den Endekriterien. Die Besonderheit hier besteht darin, dass zwei definierte Endekriterien miteinander verknüpft wurden (vgl. CTFL-Lehrplan V4.0; Abschnitt 5.1.3, 3. Absatz)."
  },
  {
    "Id": 32,
    "Text": "Ihr Team verwendet das Drei-Punkt-Schätzungsverfahren, um den Testaufwand für eine neue, risikoreiche Funktion zu schätzen. Es wurden die folgenden Schätzungen vorgenommen:<br><br>• optimistischste Schätzung: 2 Personenstunden\n• wahrscheinlichste Schätzung: 11 Personenstunden\n• pessimistischste Schätzung: 14 Personenstunden<br><br>Wie lautet die endgültige Schätzung?",
    "Options": [
      "9 Personenstunden",
      "10 Personenstunden",
      "11 Personenstunden",
      "14 Personenstunden"
    ],
    "CorrectIndex": 1,
    "Explanation": "Begründung (vgl. ISTQB®-Lehrplan CTFL V4.0, Abschnitt 5.1.4):<br><br>Für die Drei-Punkt-Schätzung gilt:<br><br>E = (optimistischste + 4*wahrscheinlichste + pessimistischste) / 6<br><br>E = (2+(4*11)+14)/6 = 10 Personenstunden"
  },
  {
    "Id": 33,
    "Text": "Sie testen eine mobile Applikation, die es Benutzern ermöglicht, ein nahegelegenes Restaurant zu finden, das die gewünschte Art des Essens anbietet. Gegeben ist die folgende Liste von Testfällen, Prioritäten (eine kleinere Zahl bedeutet eine höhere Priorität) und Abhängigkeiten:",
    "Diagram": "images/frage33_diagramm.png",
    "Options": [
      "TF 003",
      "TF 005",
      "TF 002",
      "TF 001"
    ],
    "PostText": "Welcher Testfall sollte als Nächstes ausgeführt werden?",
    "CorrectIndex": 0,
    "Explanation": "Der Test TF 001 muss zuerst durchgeführt werden, gefolgt von TF 002, um die Abhängigkeiten zu berücksichtigen. Danach folgt TF 003, um die maximale Priorität zu berücksichtigen, und dann TF 004, gefolgt von TF 005."
  },
  {
    "Id": 34,
    "Text": "Betrachten Sie die folgenden Tests (1-4) und Testquadranten (A-D):<br><br>1. Gebrauchstauglichkeitstest\n2. Komponententest\n3. Funktionaler Test\n4. Zuverlässigkeitstest<br><br>A. Testquadrant Q1: Technologieorientierung, Unterstützung des Teams\nB. Testquadrant Q2: Geschäftlich orientiert, Unterstützung des Teams\nC. Testquadrant Q3: Geschäftlich orientiert, kritische Betrachtung des Produkts\nD. Testquadrant Q4: Technologieorientierung, kritische Betrachtung des Produkts<br><br>Wie lassen sich die obigen Testkategorien den Testquadranten zuordnen?",
    "Options": [
      "1C, 2A, 3B, 4D",
      "1D, 2A, 3C, 4B",
      "1C, 2B, 3D, 4A",
      "1D, 2B, 3C, 4A"
    ],
    "CorrectIndex": 0,
    "Explanation": "Der Gebrauchstauglichkeitstest erfolgt in Q3 (1C), der Komponententest erfolgt in Q1 (2A), der funktionale Test in Q2 (3B) und der Zuverlässigkeitstest in Q4 (4D)."
  },
  {
    "Id": 35,
    "Text": "Im Rahmen einer Risikoanalyse wurde das folgende Risiko ermittelt und bewertet:<br><br>• Risiko: Zu lange Antwortzeit bei der Bereitstellung eines Suchergebnisses\n• Eintrittswahrscheinlichkeit: mittel; Schadensausmaß: hoch\n• Reaktion auf das Risiko:\n &nbsp &nbsp o Ein unabhängiges Testteam führt während der Systemtests einen Performanztest durch.\n &nbsp &nbsp o Eine ausgewählte Stichprobe von Endnutzern führt vor der Freigabe Alpha- und Beta-Tests durch.<br><br>Welche Art von Maßnahmen wurde oben vorgeschlagen, um auf das ermittelte Risiko zu reagieren?",
    "Options": [
      "Risikoakzeptanz",
      "Notfallplan",
      "Risikominderung",
      "Risikotransfer"
    ],
    "CorrectIndex": 2,
    "Explanation": "Die vorgeschlagenen Maßnahmen beziehen sich auf Tests, die eine Form der Risikominderung darstellen (vgl. CTFL-Lehrplan V4.0, Abschnitt 5.2.4, letzter Absatz, Punkteliste)."
  },
  {
    "Id": 36,
    "Text": "Welche der folgenden Aussagen zum Zweck und Inhalt von Testberichten ist zutreffend?",
    "Options": [
      "Testabschlussberichte werden in regelmäßigen Abständen erstellt und verteilt, um die Stakeholder hinsichtlich des Fortschrittes zu informieren.",
      "Ein Testfortschrittsbericht beinhaltet u. a. die Bewertung der Qualität des Produkts sowie etwaige Abweichungen vom Zeitplan.",
      "Ein Testabschlussbericht wird erstellt, wenn eine Teststufe abgeschlossen wurde, und baut auf Testfortschrittsberichten und zusätzlichen Daten auf.",
      "Testfortschrittsberichte werden während des Testabschlusses erstellt, um die Erfüllung der Endekriterien belegen zu können."
    ],
    "CorrectIndex": 2,
    "Explanation": "Testabschlussberichte werden an Zeitpunkten erstellt und verteilt, an denen inhaltlich ähnliche Aufgaben abgeschlossen wurden, beispielsweise ein Projekt, eine Teststufe, eine Testart, eine Iteration etc. (vgl. CTFL-Lehrplan V4.0, Abschnitt 5.3.2, Absatz 1, letzter Satz und Absatz 3)."
  },
  {
    "Id": 37,
    "Text": "Sie müssen eines der automatisierten Testskripte aktualisieren, um es an eine neue Anforderung anzupassen.<br><br>Welcher Prozess schreibt vor, dass Sie eine neue Version des Testskripts in der Versionsverwaltung erstellen?",
    "Options": [
      "Management der Verfolgbarkeit",
      "Wartungstest",
      "Konfigurationsmanagement",
      "Anforderungsmanagement"
    ],
    "CorrectIndex": 2,
    "Explanation": "Um das Testen zu unterstützen, kann das Konfigurationsmanagement die Versionsverwaltung aller Testelemente beinhalten (vgl. CTFL-Lehrplan V4.0, Abschnitt 5.4, 4. Absatz, 1. Satz)."
  },
  {
    "Id": 38,
    "Text": "Sie haben in Ihrer Rolle als Projektleiter den folgenden Fehlerbericht von den Entwicklern weitergeleitet bekommen, weil sie die beschriebene Anomalie nicht reproduzieren können.\n\nAnwendung hängt sich auf\n\nID 713-20230401 2022-Mai-03 – John Doe – Abgelehnt\n\nDie Anwendung hängt sich nach der Eingabe von \"Testeingabe: $ä\" im Feld Name auf dem Bildschirm zur Erstellung eines neuen Benutzers auf. Ich habe versucht, mich abzumelden und mit dem Konto test_admin01 anzumelden, das gleiche Problem. Mit anderen Testadministratorkonten versucht, dasselbe Problem. Keine Fehlermeldung erhalten; das Protokoll (siehe Anhang) enthält eine fatale Fehlermeldung. Basierend auf dem Testfall TC-1305 sollte die Anwendung die bereitgestellten Eingaben akzeptieren und den Benutzer erstellen. Bitte beheben Sie dieses Problem mit hoher Priorität, da diese Funktion mit REQ-0012 zusammenhängt, die eine wichtige neue fachliche Anforderung ist.\n\nWelche wichtigen Informationen, die für die Entwickler nützlich gewesen wären, fehlen in diesem Fehlerbericht?",
    "Options": [
      "Erwartetes Ergebnis und tatsächliches Ergebnis",
      "Referenzen und Fehlerstatus",
      "Testumgebung und Testobjekt (inkl. Version)",
      "Priorität und Schweregrad"
    ],
    "CorrectIndex": 2,
    "Explanation": "Wir wissen nicht, in welcher Testumgebung die Anomalie entdeckt wurde, und wir wissen auch nicht, welches Testobjekt bzw. welche Anwendung (und welche Version) davon betroffen ist (vgl. CTFL-Lehrplan V4.0, Abschnitt 5.5, 3. Absatz, 4. Aufzählungspunkt)."
  },
  {
    "Id": 39,
    "Text": "Welche Testaktivitäten unterstützt ein Werkzeug zur Erstellung von Testdaten?",
    "Options": [
      "Testüberwachung und Teststeuerung",
      "Testanalyse und Testentwurf",
      "Testentwurf und Testrealisierung",
      "Testabschluss"
    ],
    "CorrectIndex": 2,
    "Explanation": "Werkzeuge für Testentwurf und Testrealisierung erleichtern die Erstellung von Testfällen, Testdaten und Testläufen (vgl. CTFL-Lehrplan V4.0, Abschnitt 6.1, 3. Aufzählungspunkt)."
  },
  {
    "Id": 40,
    "Text": "Welcher Punkt ist ein mögliches Risiko bei der Testautomatisierung?",
    "Options": [
      "Es kann zu unbekannten Nebenwirkungen im operativen Betrieb kommen.",
      "Es bestehen unrealistische Erwartungen hinsichtlich der Funktionalität eines Werkzeugs.",
      "Testwerkzeuge sind möglicherweise nicht zuverlässig genug.",
      "Es kann die verfügbare Zeit für manuelle Tests auf Dauer reduziert sein."
    ],
    "CorrectIndex": 1,
    "Explanation": "Die unrealistische Erwartung besteht darin, dass in einigen Fällen das Management der Meinung ist, dass mit der Einführung eines Testwerkzeugs alle Probleme gelöst sind (vgl. CTFL-Lehrplan V4.0, Abschnitt 6.2, 3. Absatz, 1. Aufzählungspunkt)."
  }
]