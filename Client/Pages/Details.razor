@page "/details"

<h3>Auswertung im Detail</h3>

@if (State.Questions.Count > 0)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>#</th>
                <th>Frage</th>
                <th>Deine Antwort</th>
                <th>Korrekte Antwort</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < State.Questions.Count; i++)
            {
                var q = State.Questions[i];
                var userAnswer = State.Answers[i];
                var correctIndex = q.CorrectIndex;
                bool correct = userAnswer.HasValue && userAnswer.Value == correctIndex;

                <tr class="@(correct ? "table-success" : "table-danger")">
                    <td>@(i + 1)</td>
                    <td>@q.Text</td>
                    <td>@(userAnswer.HasValue ? q.Options[userAnswer.Value] : "Keine Antwort")</td>
                    <td>@q.Options[correctIndex]</td>
                </tr>
            }
        </tbody>
    </table>

    <button class="btn btn-primary" @onclick="GoBack">Zur√ºck zum Ergebnis</button>
}
else
{
    <p>Keine Daten vorhanden. Bitte starte ein neues Quiz.</p>
}

@code {
    [Inject]
    private QuizState State { get; set; } = default!;

    [Inject]
    private NavigationManager Nav { get; set; } = default!;

    void GoBack() => Nav.NavigateTo("/result");
}
